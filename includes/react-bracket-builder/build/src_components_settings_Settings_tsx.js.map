{"version":3,"file":"src_components_settings_Settings_tsx.js","mappings":"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","sources":["webpack://react-bracket-builder/./src/api/bracketApi.ts","webpack://react-bracket-builder/./src/components/bracket_builder/Bracket.tsx","webpack://react-bracket-builder/./src/components/settings/Settings.tsx"],"sourcesContent":["import { Nullable } from \"../types\";\n\nexport interface BracketResponse {\n\tid: number;\n\tname: string;\n\tactive: boolean;\n\trounds: RoundResponse[];\n}\n\nexport interface RoundResponse {\n\tid: number;\n\tname: string;\n\tdepth: number;\n\tmatches: MatchResponse[];\n}\n\nexport interface MatchResponse {\n\tid: number;\n\tindex: number;\n\tteam1: Nullable<TeamResponse>;\n\tteam2: Nullable<TeamResponse>;\n\tresult: Nullable<TeamResponse>;\n}\n\nexport interface TeamResponse {\n\tid: number;\n\tname: string;\n\tseed: Nullable<number>;\n}\n\nclass BracketApi {\n\tprivate baseUrl: string;\n\tprivate bracketPath: string = 'brackets';\n\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tthis.baseUrl = wpbb_ajax_obj.rest_url;\n\t}\n\n\tasync getBrackets(): Promise<BracketResponse[]> {\n\t\treturn await this.performRequest(this.bracketPath, 'GET');\n\t}\n\n\tasync getBracket(id: number): Promise<BracketResponse> {\n\t\treturn await this.performRequest(`${this.bracketPath}/${id}`, 'GET');\n\t}\n\n\n\tasync performRequest(path: string, method: string, body: any = {}) {\n\t\tconst request = {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t}\n\t\tif (method !== 'GET') {\n\t\t\trequest['body'] = JSON.stringify(body);\n\t\t}\n\n\t\tconst response = await fetch(`${this.baseUrl}${path}`, request);\n\t\treturn response.json();\n\t}\n}\n\nexport const bracketApi = new BracketApi();","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, InputGroup } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { bracketApi } from '../../api/bracketApi';\nimport { Nullable } from '../../types';\nimport { BracketResponse } from '../../api/bracketApi';\n\nenum WildcardPlacement {\n\tTop = 0,\n\tBottom = 1,\n\tCenter = 2,\n\tSplit = 3,\n}\n\n// Direction enum\nenum Direction {\n\tTopLeft = 0,\n\tTopRight = 1,\n\tBottomLeft = 2,\n\tBottomRight = 3,\n}\n\nclass Team {\n\tname: string;\n\t// constructor(id: number, name: string) {\n\t// \tthis.id = id;\n\t// \tthis.name = name;\n\t// }\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\tclone(): Team {\n\t\treturn new Team(this.name);\n\t}\n}\n\n\nclass MatchNode {\n\tteam1: Nullable<Team> = null;\n\tteam2: Nullable<Team> = null;\n\tresult: Nullable<Team> = null;\n\tleft: Nullable<MatchNode> = null;\n\tright: Nullable<MatchNode> = null;\n\tparent: Nullable<MatchNode> = null;\n\tdepth: number;\n\n\tconstructor(parent: Nullable<MatchNode>, depth: number) {\n\t\tthis.depth = depth;\n\t\tthis.parent = parent;\n\t}\n\n\tclone(): MatchNode {\n\t\tconst match = this;\n\t\tconst clone = new MatchNode(null, match.depth);\n\n\t\tclone.team1 = match.team1 ? match.team1.clone() : null;\n\t\tclone.team2 = match.team2 ? match.team2.clone() : null;\n\n\t\tif (match.result) {\n\t\t\tif (match.result === match.team1) {\n\t\t\t\tclone.result = clone.team1;\n\t\t\t} else if (match.result === match.team2) {\n\t\t\t\tclone.result = clone.team2;\n\t\t\t}\n\t\t}\n\n\t\treturn clone;\n\t}\n\n}\n\nclass Round {\n\tid: number;\n\tname: string;\n\tdepth: number;\n\tmatches: Array<Nullable<MatchNode>>;\n\n\tconstructor(id: number, name: string, depth: number,) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.depth = depth;\n\t\t// this.matches = [];\n\t}\n}\n\nclass WildcardRange {\n\tconstructor(public min: number, public max: number) { }\n\n\ttoString(): string {\n\t\treturn `${this.min}-${this.max}`;\n\t}\n}\n\nclass MatchTree {\n\troot: MatchNode | null\n\trounds: Round[]\n\t// numRounds: number\n\t// numWildcards: number\n\t// wildcardsPlacement: WildcardPlacement\n\n\t// constructor(numRounds: number, numWildcards: number, wildcardsPlacement: WildcardPlacement) {\n\t// \tthis.rounds = this.buildRounds(numRounds, numWildcards, wildcardsPlacement)\n\t// \tthis.numRounds = numRounds\n\t// \tthis.numWildcards = numWildcards\n\t// \tthis.wildcardsPlacement = wildcardsPlacement\n\t// }\n\tstatic fromOptions(numRounds: number, numWildcards: number, wildcardPlacement: WildcardPlacement): MatchTree {\n\t\tconst tree = new MatchTree()\n\t\ttree.rounds = this.buildRounds(numRounds, numWildcards, wildcardPlacement)\n\t\treturn tree\n\t}\n\n\tstatic buildRounds(numRounds: number, numWildcards: number, wildcardPlacement: WildcardPlacement): Round[] {\n\t\t// The number of matches in a round is equal to 2^depth unless it's the first round\n\t\t// and there are wildcards. In that case, the number of matches equals the number of wildcards\n\t\tconst rootMatch = new MatchNode(null, 0)\n\t\tconst finalRound = new Round(1, `Round ${numRounds}`, 0)\n\t\tfinalRound.matches = [rootMatch]\n\t\tconst rounds = [finalRound]\n\n\t\tfor (let i = 1; i < numRounds; i++) {\n\n\t\t\tlet ranges: WildcardRange[] = []\n\n\t\t\tif (i === numRounds - 1 && numWildcards > 0) {\n\t\t\t\tconst placement = wildcardPlacement\n\t\t\t\tconst maxNodes = 2 ** i\n\t\t\t\tconst range1 = this.getWildcardRange(0, maxNodes / 2, numWildcards / 2, placement)\n\t\t\t\tconst range2 = this.getWildcardRange(maxNodes / 2, maxNodes, numWildcards / 2, placement)\n\t\t\t\tranges = [...range1, ...range2]\n\t\t\t}\n\n\t\t\tconst round = new Round(i + 1, `Round ${numRounds - i}`, i);\n\t\t\tconst maxMatches = 2 ** i\n\t\t\tconst matches: (MatchNode | null)[] = []\n\t\t\tfor (let x = 0; x < maxMatches; x++) {\n\t\t\t\tif (ranges.length > 0) {\n\t\t\t\t\t// check to see if x is in the range of any of the wildcard ranges\n\t\t\t\t\tconst inRange = ranges.some(range => {\n\t\t\t\t\t\treturn x >= range.min && x < range.max\n\t\t\t\t\t})\n\t\t\t\t\tif (!inRange) {\n\t\t\t\t\t\tmatches[x] = null\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// const parentIndex = Math.floor(x / 2)\n\t\t\t\t// const parent = rounds[i - 1].matches[parentIndex]\n\t\t\t\tconst parent = this.getParent(x, i, rounds)\n\t\t\t\tconst match = new MatchNode(parent, i)\n\t\t\t\tthis.assignMatchToParent(x, match, parent)\n\t\t\t\tmatches[x] = match\n\t\t\t}\n\t\t\tround.matches = matches\n\t\t\trounds[i] = round\n\t\t};\n\t\treturn rounds\n\t}\n\n\n\tstatic getWildcardRange(start: number, end: number, count: number, placement: WildcardPlacement): WildcardRange[] {\n\t\tswitch (placement) {\n\t\t\tcase WildcardPlacement.Top:\n\t\t\t\treturn [new WildcardRange(start, start + count)]\n\t\t\tcase WildcardPlacement.Bottom:\n\t\t\t\treturn [new WildcardRange(end - count, end)]\n\t\t\tcase WildcardPlacement.Center:\n\t\t\t\tconst offset = (end - start - count) / 2;\n\t\t\t\treturn [new WildcardRange(start + offset, end - offset)];\n\t\t\tcase WildcardPlacement.Split:\n\t\t\t\treturn [new WildcardRange(start, start + count / 2), new WildcardRange(end - count / 2, end)]\n\t\t}\n\t}\n\n\tclone(): MatchTree {\n\t\tconsole.log('cloning tree')\n\t\tconst tree = this\n\t\tconst newTree = new MatchTree()\n\t\t// First, create the new rounds.\n\t\tnewTree.rounds = tree.rounds.map((round) => {\n\t\t\tconst newRound = new Round(round.id, round.name, round.depth);\n\t\t\treturn newRound;\n\t\t});\n\t\t// Then, iterate over the new rounds to create the matches and update their parent relationships.\n\t\tnewTree.rounds.forEach((round, roundIndex) => {\n\t\t\tround.matches = tree.rounds[roundIndex].matches.map((match, matchIndex) => {\n\t\t\t\tif (match === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst newMatch = match.clone();\n\t\t\t\tconst parent = MatchTree.getParent(matchIndex, roundIndex, newTree.rounds);\n\t\t\t\tnewMatch.parent = parent;\n\t\t\t\tMatchTree.assignMatchToParent(matchIndex, newMatch, parent);\n\t\t\t\treturn newMatch;\n\t\t\t});\n\t\t});\n\t\treturn newTree;\n\t}\n\n\tstatic fromBracketResponse(bracket: BracketResponse): MatchTree {\n\t\tconst tree = new MatchTree()\n\t\ttree.rounds = bracket.rounds.map((round) => {\n\t\t\tconst newRound = new Round(round.id, round.name, round.depth);\n\t\t\treturn newRound;\n\t\t});\n\t\t// Then, iterate over the new rounds to create the matches and update their parent relationships.\n\t\ttree.rounds.forEach((round, roundIndex) => {\n\t\t\tround.matches = bracket.rounds[roundIndex].matches.map((match, matchIndex) => {\n\t\t\t\tif (match === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst newMatch = new MatchNode(null, roundIndex);\n\t\t\t\tnewMatch.team1 = match.team1 ? new Team(match.team1.name) : null;\n\t\t\t\tnewMatch.team2 = match.team2 ? new Team(match.team2.name) : null;\n\t\t\t\tnewMatch.result = match.result ? new Team(match.result.name) : null;\n\t\t\t\tconst parent = this.getParent(matchIndex, roundIndex, tree.rounds);\n\t\t\t\tnewMatch.parent = parent;\n\t\t\t\tthis.assignMatchToParent(matchIndex, newMatch, parent);\n\t\t\t\treturn newMatch;\n\t\t\t});\n\t\t});\n\t\treturn tree;\n\t}\n\n\n\t// \tnewTree.rounds = tree.rounds.map((round, i, rounds) => {\n\t// \t\tconst newRound = new Round(round.id, round.name, round.depth, round.roundNum)\n\t// \t\tconsole.log('i', i)\n\t// \t\tconsole.log('rounds', rounds)\n\t// \t\tnewRound.matches = round.matches.map((match, x, matches) => {\n\t// \t\t\tif (match === null) {\n\t// \t\t\t\treturn null\n\t// \t\t\t}\n\t// \t\t\tconst newMatch = match.clone()\n\t// \t\t\tconsole.log('x', x)\n\t// \t\t\tconsole.log('matches', matches)\n\t// \t\t\tconst parent = this.getParent(x, i, newTree.rounds)\n\t// \t\t\tnewMatch.parent = parent\n\t// \t\t\tthis.assignMatchToParent(x, newMatch, parent)\n\t// \t\t\treturn newMatch\n\t// \t\t})\n\t// \t\treturn newRound\n\t// \t})\n\t// \treturn newTree\n\t// }\n\n\tstatic getParent(matchIndex: number, roundIndex: number, rounds: Round[]): MatchNode | null {\n\t\tif (roundIndex === 0) {\n\t\t\treturn null\n\t\t}\n\t\tconst parentIndex = Math.floor(matchIndex / 2)\n\t\treturn rounds[roundIndex - 1].matches[parentIndex]\n\t}\n\n\tstatic assignMatchToParent(matchIndex: number, match: MatchNode, parent: MatchNode | null) {\n\t\tif (parent === null) {\n\t\t\treturn\n\t\t}\n\t\tif (matchIndex % 2 === 0) {\n\t\t\tparent.left = match\n\t\t} else {\n\t\t\tparent.right = match\n\t\t}\n\t}\n}\n\nconst TeamSlot = (props) => {\n\tconst [editing, setEditing] = useState(false)\n\tconst [textBuffer, setTextBuffer] = useState('')\n\tconst team: Team | null = props.team\n\tconst updateTeam = props.updateTeam\n\n\tconst handleUpdateTeam = (e) => {\n\t\tif (!team && textBuffer !== '' || team && textBuffer !== team.name) {\n\t\t\tupdateTeam(textBuffer)\n\t\t}\n\t\tsetEditing(false)\n\t}\n\n\treturn (\n\t\t<div className={props.className} onClick={() => setEditing(true)}>\n\t\t\t{editing ?\n\t\t\t\t<input\n\t\t\t\t\tclassName='wpbb-team-name-input'\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonFocus={(e) => e.target.select()}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={textBuffer}\n\t\t\t\t\tonChange={(e) => setTextBuffer(e.target.value)}\n\t\t\t\t\tonBlur={handleUpdateTeam}\n\t\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\t\thandleUpdateTeam(e)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<span className='wpbb-team-name'>{team ? team.name : ''}</span>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nconst MatchBox = (props) => {\n\tconst match: MatchNode | null = props.match\n\tconst direction: Direction = props.direction\n\tconst height: number = props.height\n\tconst spacing: number = props.spacing\n\t// const updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\tconst updateTeam = props.updateTeam\n\n\t// const updateTeam = (name: string, left: boolean) => {\n\t// \tconsole.log('updateTeam', name)\n\t// \t// updateTeam(match.roundId, match.matchIndex, left, name)\n\t// }\n\n\tif (match === null) {\n\t\treturn (\n\t\t\t<div className='wpbb-match-box-empty' style={{ height: height + spacing }} />\n\t\t)\n\t}\n\n\n\tlet className: string;\n\n\tif (direction === Direction.TopLeft || direction === Direction.BottomLeft) {\n\t\t// Left side of the bracket\n\t\tclassName = 'wpbb-match-box-left'\n\t} else {\n\t\t// Right side of the bracket\n\t\tclassName = 'wpbb-match-box-right'\n\t}\n\n\tconst upperOuter = match.left === null\n\tconst lowerOuter = match.right === null\n\n\tif (upperOuter && lowerOuter) {\n\t\t// First round\n\t\tclassName += '-outer'\n\t} else if (upperOuter) {\n\t\t// Upper bracket\n\t\tclassName += '-outer-upper'\n\t} else if (lowerOuter) {\n\t\t// Lower bracket\n\t\tclassName += '-outer-lower'\n\t}\n\n\t// This component renders the lines connecting two nodes representing a \"game\"\n\t// These should be evenly spaced in the column and grow according to the number of other matches in the round\n\treturn (\n\t\t<div className={className} style={{ height: height, marginBottom: spacing }}>\n\t\t\t<TeamSlot className='wpbb-team1' team={match.team1} updateTeam={(name: string) => updateTeam(true, name)} />\n\t\t\t<TeamSlot className='wpbb-team2' team={match.team2} updateTeam={(name: string) => updateTeam(false, name)} />\n\t\t</div>\n\t)\n}\n\nconst Spacer = ({ grow = '1' }) => {\n\treturn (\n\t\t<div style={{ flexGrow: grow }} />\n\t)\n}\n\nconst RoundHeader = (props) => {\n\tconst [editRoundName, setEditRoundName] = useState(false);\n\tconst [nameBuffer, setNameBuffer] = useState('');\n\tconst round: Round = props.round;\n\tconst updateRoundName = props.updateRoundName;\n\n\tuseEffect(() => {\n\t\tsetNameBuffer(props.round.name)\n\t}, [props.round.name])\n\n\tconst doneEditing = () => {\n\t\tsetEditRoundName(false)\n\t\tprops.updateRoundName(props.round.id, nameBuffer)\n\t}\n\n\treturn (\n\t\t<div className='wpbb-round__header'>\n\t\t\t{editRoundName ? <Form.Control type='text'\n\t\t\t\tvalue={nameBuffer}\n\t\t\t\tautoFocus\n\t\t\t\tonFocus={(e) => e.target.select()}\n\t\t\t\tonBlur={() => doneEditing()}\n\t\t\t\tonChange={(e) => setNameBuffer(e.target.value)}\n\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\tdoneEditing()\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<span onClick={() => setEditRoundName(true)}>{round.name}</span>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nconst FinalRound = (props) => {\n\tconst round: Round = props.round;\n\tconst updateRoundName = props.updateRoundName;\n\treturn (\n\t\t<div className='wpbb-round'>\n\t\t\t<RoundHeader round={round} updateRoundName={updateRoundName} />\n\t\t\t<div className='wpbb-round__body'>\n\t\t\t\t<Spacer grow='2' />\n\t\t\t\t<div className='wpbb-final-match'>\n\t\t\t\t\t<TeamSlot className='wpbb-team1' />\n\t\t\t\t\t<TeamSlot className='wpbb-team2' />\n\t\t\t\t</div>\n\t\t\t\t<Spacer grow='2' />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nconst MatchColumn = (props) => {\n\tconst round: Round = props.round;\n\tconst matches: MatchNode[] = props.matches;\n\tconst direction: Direction = props.direction;\n\tconst matchHeight: number = props.matchHeight;\n\tconst updateRoundName = props.updateRoundName;\n\tconst updateTeam = props.updateTeam;\n\t// const updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\n\tconst buildMatches = () => {\n\t\tconst matchBoxes = matches.map((match, i) => {\n\t\t\tconst matchIndex = direction === Direction.TopLeft || direction === Direction.BottomLeft ? i : i + matches.length\n\t\t\treturn (\n\t\t\t\t<MatchBox\n\t\t\t\t\tmatch={match}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\theight={matchHeight}\n\t\t\t\t\tspacing={i + 1 < matches.length ? matchHeight : 0} // Do not add spacing to the last match in the round column\n\t\t\t\t\tupdateTeam={(left: boolean, name: string) => updateTeam(round.id, matchIndex, left, name)}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t\treturn matchBoxes\n\n\t}\n\treturn (\n\t\t<div className='wpbb-round'>\n\t\t\t<RoundHeader round={round} updateRoundName={updateRoundName} />\n\t\t\t<div className='wpbb-round__body'>\n\t\t\t\t{buildMatches()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst NumRoundsSelector = (props) => {\n\tconst {\n\t\tnumRounds,\n\t\tsetNumRounds\n\t} = props\n\n\tconst minRounds = 1;\n\tconst maxRounds = 6;\n\n\tconst options = Array.from(Array(maxRounds - minRounds + 1).keys()).map((i) => {\n\t\treturn (\n\t\t\t<option value={i + minRounds}>{i + minRounds}</option>\n\t\t)\n\t})\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetNumRounds(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tNumber of Rounds:\n\t\t\t</label>\n\t\t\t<select value={numRounds} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nconst NumWildcardsSelector = (props) => {\n\tconst {\n\t\tnumWildcards,\n\t\tsetNumWildcards,\n\t\tmaxWildcards,\n\t} = props\n\n\tconst minWildcards = 0;\n\n\t// Number of wildcards must be an even number or 0\n\tlet options = [\n\t\t<option value={0}>0</option>\n\t]\n\toptions = [...options, ...Array.from(Array(maxWildcards / 2).keys()).reverse().map((i) => {\n\t\treturn (\n\t\t\t<option value={(i + 1) * 2}>{(i + 1) * 2}</option>\n\t\t)\n\t})]\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetNumWildcards(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tWildcard Games:\n\t\t\t</label>\n\t\t\t<select value={numWildcards} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nconst WildcardPlacementSelector = (props) => {\n\tconst {\n\t\twildcardPlacement,\n\t\tsetWildcardPlacement,\n\t} = props\n\n\tconst options = [\n\t\t<option value={WildcardPlacement.Bottom}>Bottom</option>,\n\t\t<option value={WildcardPlacement.Top}>Top</option>,\n\t\t<option value={WildcardPlacement.Split}>Split</option>,\n\t\t<option value={WildcardPlacement.Center}>Centered</option>,\n\t]\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetWildcardPlacement(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tWildcard Placement:\n\t\t\t</label>\n\t\t\t<select value={wildcardPlacement} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nconst BracketTitle = (props) => {\n\tconst {\n\t\ttitle,\n\t\tsetTitle,\n\t} = props\n\tconst [editing, setEditing] = useState(false)\n\tconst [textBuffer, setTextBuffer] = useState(title)\n\n\tconst handleUpdateTitle = (event) => {\n\t\tsetTitle(textBuffer)\n\t\tsetEditing(false)\n\t}\n\n\treturn (\n\t\t<div className='wpbb-bracket-title' onClick={() => setEditing(true)}>\n\t\t\t{editing ?\n\t\t\t\t<input\n\t\t\t\t\tclassName='wpbb-bracket-title-input'\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonFocus={(e) => e.target.select()}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={textBuffer}\n\t\t\t\t\tonChange={(e) => setTextBuffer(e.target.value)}\n\t\t\t\t\tonBlur={handleUpdateTitle}\n\t\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\t\thandleUpdateTitle(e)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<span className='wpbb-bracket-title-name'>{title}</span>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\n\ninterface BracketProps {\n\tmatchTree: MatchTree;\n\tsetMatchTree?: (matchTree: MatchTree) => void;\n}\n\nconst Bracket = (props: BracketProps) => {\n\t// const { numRounds, numWildcards, wildcardPlacement } = props\n\t// const [matchTree, setMatchTree] = useState<MatchTree>(MatchTree.fromOptions(numRounds, numWildcards, wildcardPlacement))\n\tconst matchTree = props.matchTree\n\tconst setMatchTree = props.setMatchTree\n\n\tconst rounds = matchTree.rounds\n\n\tconst updateRoundName = (roundId: number, name: string) => {\n\t\tif (setMatchTree === undefined) {\n\t\t\treturn\n\t\t}\n\t\tconst newMatchTree = matchTree.clone();\n\t\tconst roundToUpdate = newMatchTree.rounds.find((round) => round.id === roundId);\n\t\tif (roundToUpdate) {\n\t\t\troundToUpdate.name = name;\n\t\t\tsetMatchTree(newMatchTree);\n\t\t}\n\t};\n\n\tconst updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\t\tif (setMatchTree === undefined) {\n\t\t\treturn\n\t\t}\n\t\tconst newMatchTree = matchTree.clone();\n\t\tconst roundToUpdate = newMatchTree.rounds.find((round) => round.id === roundId);\n\t\tif (roundToUpdate) {\n\t\t\tconst matchToUpdate = roundToUpdate.matches[matchIndex];\n\t\t\tif (matchToUpdate) {\n\t\t\t\tif (left) {\n\t\t\t\t\tconst team = matchToUpdate.team1;\n\t\t\t\t\tif (team) {\n\t\t\t\t\t\tteam.name = name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatchToUpdate.team1 = new Team(name);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst team = matchToUpdate.team2;\n\t\t\t\t\tif (team) {\n\t\t\t\t\t\tteam.name = name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatchToUpdate.team2 = new Team(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetMatchTree(newMatchTree);\n\t\t}\n\t}\n\n\tconst targetHeight = 800;\n\n\t// The number of rounds sets the initial height of each match\n\t// const firstRoundMatchHeight = targetHeight / rounds.length / 2;\n\tconst firstRoundMatchHeight = targetHeight / 2 ** (rounds.length - 2) / 2;\n\n\t/**\n\t * Build rounds in two directions, left to right and right to left\n\t */\n\tconst buildRounds2 = (rounds: Round[]) => {\n\t\t// Assume rounds are sorted by depth\n\t\t// Rendering from left to right, sort by depth descending\n\t\tconst numDirections = 2\n\n\t\treturn [\n\t\t\t...rounds.slice(1).reverse().map((round, idx) => {\n\t\t\t\t// Get the first half of matches for this column\n\t\t\t\tconst colMatches = round.matches.slice(0, round.matches.length / 2)\n\n\t\t\t\treturn <MatchColumn\n\t\t\t\t\tmatches={colMatches}\n\t\t\t\t\tround={round} direction={Direction.TopLeft}\n\t\t\t\t\tnumDirections={numDirections}\n\t\t\t\t\tmatchHeight={2 ** idx * firstRoundMatchHeight}\n\t\t\t\t\tupdateRoundName={updateRoundName}\n\t\t\t\t\tupdateTeam={updateTeam}\n\t\t\t\t/>\n\t\t\t}),\n\t\t\t// handle final round differently\n\t\t\t<FinalRound round={rounds[0]} updateRoundName={updateRoundName} />,\n\t\t\t...rounds.slice(1).map((round, idx, arr) => {\n\t\t\t\t// Get the second half of matches for this column\n\t\t\t\tconst colMatches = round.matches.slice(round.matches.length / 2)\n\n\t\t\t\treturn <MatchColumn round={round}\n\t\t\t\t\tmatches={colMatches}\n\t\t\t\t\tdirection={Direction.TopRight}\n\t\t\t\t\tnumDirections={numDirections}\n\t\t\t\t\tmatchHeight={2 ** (arr.length - 1 - idx) * firstRoundMatchHeight}\n\t\t\t\t\tupdateRoundName={updateRoundName}\n\t\t\t\t\tupdateTeam={updateTeam}\n\t\t\t\t/>\n\t\t\t})\n\t\t]\n\t}\n\n\treturn (\n\t\t<div className='wpbb-bracket'>\n\t\t\t{rounds.length > 0 && buildRounds2(rounds)}\n\t\t</div>\n\t)\n}\n\nconst ViewBracketModal = (props) => {\n\tconst {\n\t\tshow,\n\t\thandleClose,\n\t\tbracketId\n\t} = props;\n\tconst [matchTree, setMatchTree] = useState<MatchTree | null>(null)\n\n\tuseEffect(() => {\n\t\tbracketApi.getBracket(bracketId)\n\t\t\t.then((bracket) => {\n\t\t\t\tsetMatchTree(MatchTree.fromBracketResponse(bracket))\n\t\t\t\tconsole.log('bracket', bracket)\n\t\t\t})\n\t})\n\n\treturn (\n\t\t<Modal className='wpbb-bracket-modal' show={show} onHide={handleClose} size='xl' centered={true}>\n\t\t\t<Modal.Header className='wpbb-bracket-modal__header' closeButton>\n\t\t\t\t<Modal.Title>View Bracket {bracketId}</Modal.Title>\n\t\t\t</Modal.Header >\n\t\t\t<Modal.Body className='pt-0'>\n\t\t\t\t{matchTree ? <Bracket matchTree={matchTree} /> : 'Loading...'}\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer className='wpbb-bracket-modal__footer'>\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n\nconst NewBracketModal = (props) => {\n\tconst {\n\t\tshow,\n\t\thandleClose,\n\t\thandleSave,\n\t\tbracketId\n\t} = props;\n\tconst [numRounds, setNumRounds] = useState(4);\n\tconst [numWildcards, setNumWildcards] = useState(0);\n\tconst [wildcardPlacement, setWildcardPlacement] = useState(WildcardPlacement.Bottom);\n\tconst [bracketName, setBracketName] = useState('New Bracket');\n\tconst [matchTree, setMatchTree] = useState<MatchTree>(MatchTree.fromOptions(numRounds, numWildcards, wildcardPlacement))\n\t// The max number of wildcards is 2 less than the possible number of matches in the first round\n\t// (2^numRounds - 2)\n\tconst maxWildcards = 2 ** (numRounds - 1) - 2;\n\n\tuseEffect(() => {\n\t\tsetMatchTree(MatchTree.fromOptions(numRounds, numWildcards, wildcardPlacement))\n\t}, [numRounds, numWildcards, wildcardPlacement])\n\n\n\treturn (\n\t\t<Modal className='wpbb-bracket-modal' show={show} onHide={handleClose} size='xl' centered={true}>\n\t\t\t<Modal.Header className='wpbb-bracket-modal__header' closeButton>\n\t\t\t\t<Modal.Title><BracketTitle title={bracketName} setTitle={setBracketName} /></Modal.Title>\n\t\t\t\t<form className='wpbb-options-form'>\n\t\t\t\t\t<NumRoundsSelector numRounds={numRounds} setNumRounds={setNumRounds} />\n\t\t\t\t\t<NumWildcardsSelector numWildcards={numWildcards} setNumWildcards={setNumWildcards} maxWildcards={maxWildcards} />\n\t\t\t\t\t<WildcardPlacementSelector wildcardPlacement={wildcardPlacement} setWildcardPlacement={setWildcardPlacement} />\n\t\t\t\t</form>\n\t\t\t</Modal.Header >\n\t\t\t<Modal.Body className='pt-0'><Bracket matchTree={matchTree} /></Modal.Body>\n\t\t\t<Modal.Footer className='wpbb-bracket-modal__footer'>\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"primary\" onClick={handleSave}>\n\t\t\t\t\tSave Changes\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n\nexport const BracketModal = (props) => {\n\tconst bracketId = props.bracketId;\n\n\tif (bracketId) {\n\t\treturn <ViewBracketModal {...props} />\n\t} else {\n\t\treturn <NewBracketModal {...props} />\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Button, Table } from 'react-bootstrap';\nimport { BracketModal, Bracket } from '../bracket_builder/Bracket';\nimport { BracketResponse, bracketApi } from '../../api/bracketApi';\n\n// class BracketResponse {\n// \tid: number;\n// \tname: string;\n// \tactive: boolean;\n\n// \tconstructor(id: number, name: string, active: boolean) {\n// \t\tthis.id = id;\n// \t\tthis.name = name;\n// \t\tthis.active = active;\n// \t}\n// }\n\n\ninterface BracketRowProps {\n\tbracket: BracketResponse;\n\thandleViewBracket: (bracketId: number) => void;\n}\n\nconst BracketRow: React.FC<BracketRowProps> = (props) => {\n\tconst bracket: BracketResponse = props.bracket;\n\tconst handleViewBracket = props.handleViewBracket;\n\treturn (\n\t\t<tr onClick={() => handleViewBracket(bracket.id)}>\n\t\t\t<td>{bracket.name}</td>\n\t\t\t{/* <td>{bracket.active ? <span className='wpbb-bracket-table-active-check'>&#10003;</span> : ''}</td> */}\n\t\t\t<td className='text-center'>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={bracket.active}\n\t\t\t\t/>\n\t\t\t</td>\n\t\t\t<td className='wpbb-bracket-table-action-col'>\n\t\t\t\t{/* <Button variant=\"light\" >{bracket.active ? 'deactivate' : 'activate'}</Button> */}\n\t\t\t\t<Button variant=\"primary\" >Score</Button>\n\t\t\t\t<Button variant=\"success\" className='mx-2'>Copy</Button>\n\t\t\t\t<Button variant=\"danger\">Delete</Button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\n\ninterface BracketTableProps {\n\tbrackets: BracketResponse[];\n\thandleShowBracketModal: (bracketId: number | null) => void;\n}\n\nconst BracketTable: React.FC<BracketTableProps> = (props) => {\n\tconst brackets: BracketResponse[] = props.brackets;\n\tconst handleShowBracketModal = props.handleShowBracketModal;\n\n\tconst handleViewBracket = (bracketId: number) => {\n\t\thandleShowBracketModal(bracketId);\n\t}\n\n\treturn (\n\t\t<Table hover className='table-dark wpbb-bracket-table'>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t<th scope=\"col\" className='text-center'>Active</th>\n\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{brackets.map((bracket) => (\n\t\t\t\t\t<BracketRow key={bracket.id} bracket={bracket} handleViewBracket={handleViewBracket} />\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</Table>\n\t);\n};\n\nconst BracketListItem = (props) => {\n\tconst bracket: BracketResponse = props.bracket;\n\treturn (\n\t\t<li>{bracket.name}</li>\n\t)\n}\n\n\nconst BracketList = (props) => {\n\tconst brackets: BracketResponse[] = props.brackets;\n\treturn (\n\t\t<ul>\n\t\t\t{brackets.map((bracket) => <BracketListItem key={bracket.id} bracket={bracket} />)}\n\t\t</ul>\n\t)\n}\n\n\nconst Settings = () => {\n\tconst [showBracketModal, setShowBracketModal] = useState(false)\n\tconst [brackets, setBrackets] = useState<BracketResponse[]>([]);\n\tconst [activeBracketId, setActiveBracketId] = useState<number | null>(null);\n\n\tconst handleCloseBracketModal = () => {\n\t\tconsole.log('close')\n\t\tsetActiveBracketId(null);\n\t\tsetShowBracketModal(false);\n\t}\n\tconst handleSaveBracketModal = () => setShowBracketModal(false);\n\tconst handleShowBracketModal = (bracketId: number | null = null) => {\n\t\tsetActiveBracketId(bracketId);\n\t\tsetShowBracketModal(true);\n\t};\n\n\tuseEffect(() => {\n\t\tbracketApi.getBrackets().then((brackets) => {\n\t\t\tconsole.log(brackets);\n\t\t\tsetBrackets(brackets);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Container >\n\t\t\t<h2 className='mt-4 mb-4'>Bracket Builder Settings</h2>\n\t\t\t{/* <BracketList brackets={brackets} /> */}\n\t\t\t<BracketTable brackets={brackets} handleShowBracketModal={handleShowBracketModal} />\n\t\t\t<Button variant='dark' className='mt-6' onClick={() => handleShowBracketModal()}>Add Bracket</Button>\n\t\t\t<BracketModal show={showBracketModal} bracketId={activeBracketId} handleClose={handleCloseBracketModal} handleSave={handleSaveBracketModal} />\n\t\t</Container>\n\t);\n}\n\n\n\n\nexport default Settings; "],"names":["BracketApi","bracketPath","constructor","baseUrl","wpbb_ajax_obj","rest_url","getBrackets","performRequest","getBracket","id","path","method","body","arguments","length","undefined","request","headers","JSON","stringify","response","fetch","json","bracketApi","React","useState","useEffect","Button","Modal","Form","WildcardPlacement","Direction","Team","name","clone","MatchNode","team1","team2","result","left","right","parent","depth","match","Round","WildcardRange","min","max","toString","MatchTree","fromOptions","numRounds","numWildcards","wildcardPlacement","tree","rounds","buildRounds","rootMatch","finalRound","matches","i","ranges","placement","maxNodes","range1","getWildcardRange","range2","round","maxMatches","x","inRange","some","range","getParent","assignMatchToParent","start","end","count","Top","Bottom","Center","offset","Split","console","log","newTree","map","newRound","forEach","roundIndex","matchIndex","newMatch","fromBracketResponse","bracket","parentIndex","Math","floor","TeamSlot","props","editing","setEditing","textBuffer","setTextBuffer","team","updateTeam","handleUpdateTeam","e","createElement","className","onClick","autoFocus","onFocus","target","select","type","value","onChange","onBlur","onKeyUp","key","MatchBox","direction","height","spacing","style","TopLeft","BottomLeft","upperOuter","lowerOuter","marginBottom","Spacer","_ref","grow","flexGrow","RoundHeader","editRoundName","setEditRoundName","nameBuffer","setNameBuffer","updateRoundName","doneEditing","Control","FinalRound","MatchColumn","matchHeight","buildMatches","matchBoxes","NumRoundsSelector","setNumRounds","minRounds","maxRounds","options","Array","from","keys","handleChange","event","num","parseInt","NumWildcardsSelector","setNumWildcards","maxWildcards","minWildcards","reverse","WildcardPlacementSelector","setWildcardPlacement","BracketTitle","title","setTitle","handleUpdateTitle","Bracket","matchTree","setMatchTree","roundId","newMatchTree","roundToUpdate","find","matchToUpdate","targetHeight","firstRoundMatchHeight","buildRounds2","numDirections","slice","idx","colMatches","arr","TopRight","ViewBracketModal","show","handleClose","bracketId","then","onHide","size","centered","Header","closeButton","Title","Body","Footer","variant","NewBracketModal","handleSave","bracketName","setBracketName","BracketModal","Container","Table","BracketRow","handleViewBracket","checked","active","BracketTable","brackets","handleShowBracketModal","hover","scope","BracketListItem","BracketList","Settings","showBracketModal","setShowBracketModal","setBrackets","activeBracketId","setActiveBracketId","handleCloseBracketModal","handleSaveBracketModal"],"sourceRoot":""}