{"version":3,"file":"src_components_settings_Settings_tsx.js","mappings":"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","sources":["webpack://react-bracket-builder/./src/components/bracket_builder/Bracket.tsx","webpack://react-bracket-builder/./src/components/settings/Settings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, InputGroup } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\n\n// Direction enum\nenum Direction {\n\tTopLeft = 0,\n\tTopRight = 1,\n\tBottomLeft = 2,\n\tBottomRight = 3,\n}\n\nclass Node {\n\tid: number;\n\tname: string;\n\tleft: number;\n\tright: number;\n\tin_order: number;\n\tdepth: number;\n\tparent_id: number;\n\tconstructor(id: number, name: string, left: number, right: number, depth: number, parent_id: number) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.depth = depth;\n\t\tthis.parent_id = parent_id;\n\t}\n}\n\nclass Round {\n\tid: number;\n\tname: string;\n\tdepth: number;\n\troundNum: number;\n\tnumMatches: number;\n\tnodes: Node[];\n\tconstructor(id: number, name: string, depth: number, roundNum: number, numMatches: number, nodes: Node[]) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.depth = depth;\n\t\tthis.roundNum = roundNum;\n\t\tthis.numMatches = numMatches;\n\t\tthis.nodes = nodes;\n\t}\n}\n\nconst TeamSlot = (props) => {\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t<span className='wpbb-team-name'>Michigan State</span>\n\t\t</div>\n\t)\n}\n\nconst MatchBox = ({ ...props }) => {\n\tconst node1: Node = props.node1\n\tconst node2: Node = props.node2\n\n\tconst empty: boolean = props.empty\n\tconst direction: Direction = props.direction\n\tconst outer: boolean = props.outer\n\tconst height: number = props.height\n\tconst spacing: number = props.spacing\n\n\tconsole.log('empty: ' + empty)\n\n\tlet className: string;\n\n\tif (direction === Direction.TopLeft || direction === Direction.BottomLeft) {\n\t\t// Left side of the bracket\n\t\tclassName = 'wpbb-match-box-left'\n\t} else {\n\t\t// Right side of the bracket\n\t\tclassName = 'wpbb-match-box-right'\n\t}\n\tif (outer) {\n\t\t// First round\n\t\tclassName += '-outer'\n\t}\n\t// This component renders the lines connecting two nodes representing a \"game\"\n\t// These should be evenly spaced in the column and grow according to the number of other matches in the round\n\treturn (\n\t\t<>\n\t\t\t{empty ?\n\t\t\t\t<div style={{ height: height + spacing }} />\n\t\t\t\t:\n\t\t\t\t<div className={className} style={{ height: height + 'px', marginBottom: spacing + 'px' }}>\n\t\t\t\t\t<TeamSlot className='wpbb-team1' />\n\t\t\t\t\t<TeamSlot className='wpbb-team2' />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\t)\n}\n\nconst Spacer = ({ grow = '1' }) => {\n\treturn (\n\t\t<div style={{ flexGrow: grow }} />\n\t)\n}\n\nconst RoundHeader = (props) => {\n\tconst [editRoundName, setEditRoundName] = useState(false);\n\tconst [nameBuffer, setNameBuffer] = useState('');\n\tconst round: Round = props.round;\n\tconst updateRoundName = props.updateRoundName;\n\n\tuseEffect(() => {\n\t\tsetNameBuffer(props.round.name)\n\t}, [props.round.name])\n\n\tconst doneEditing = () => {\n\t\tsetEditRoundName(false)\n\t\tprops.updateRoundName(props.round.id, nameBuffer)\n\t}\n\n\treturn (\n\t\t<div className='wpbb-round__header'>\n\t\t\t{/* {round.depth}<br /> */}\n\t\t\t{/* {round.name} */}\n\t\t\t{editRoundName ? <Form.Control type='text'\n\t\t\t\tvalue={nameBuffer}\n\t\t\t\tautoFocus\n\t\t\t\tonFocus={(e) => e.target.select()}\n\t\t\t\tonBlur={() => doneEditing()}\n\t\t\t\tonChange={(e) => setNameBuffer(e.target.value)}\n\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\tdoneEditing()\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<span onClick={() => setEditRoundName(true)}>{round.name}</span>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nconst FinalRound = (props) => {\n\tconst round: Round = props.round;\n\tconst updateRoundName = props.updateRoundName;\n\treturn (\n\t\t<div className='wpbb-round'>\n\t\t\t<RoundHeader round={round} updateRoundName={updateRoundName} />\n\t\t\t<div className='wpbb-round__body'>\n\t\t\t\t<Spacer grow='2' />\n\t\t\t\t<MatchBox className='wpbb-final-match' />\n\t\t\t\t<Spacer grow='2' />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nconst RoundComponent = (props) => {\n\tconst round: Round = props.round;\n\tconst direction: Direction = props.direction;\n\tconst numDirections: number = props.numDirections;\n\tconst matchHeight: number = props.matchHeight;\n\tconst updateRoundName = props.updateRoundName;\n\n\n\t// For a given round and it's depth, we know that the number of nodes in this round will be 2^depth\n\t// For example, a round with depth 1 has 2 nodes and a round at depth 3 can have up to 8 nodes\n\t// The number of matches in a round is the number of nodes / 2\n\t// However, each round component only renders the match in a given direction. So for a bracket with 2 directions, \n\t// the number of matches is split in half\n\n\tconst buildMatches = () => {\n\t\t// const numMatches = 2 ** round.depth / 2 / numDirections\n\t\t// Get the number of matches in a single direction (left or right)\n\t\tconst numMatches = round.numMatches / numDirections\n\t\t// Get the difference between the specified number of matches and how many there could possibly be\n\t\t// This is to account for wildcard rounds where there are less than the maximum number of matches\n\t\tconst maxMatches = 2 ** round.depth / 2 / numDirections\n\t\tconst emptyMatches = maxMatches - numMatches\n\t\tconsole.log('numMatches', numMatches)\n\t\tconsole.log('maxMatches', maxMatches)\n\t\tconsole.log('emptyMatches', emptyMatches)\n\n\t\t// console.log('round numMatches', roundNumMatches)\n\n\t\t// Whether there are any matches below this round\n\t\t// Used to determine whether to truncate the match box border so that it does not extend past the team slot\n\t\tconst outerRound = round.roundNum === 1\n\n\t\tconst matches = Array.from(Array(maxMatches).keys()).map((i) => {\n\t\t\treturn (\n\t\t\t\t// <MatchBox className={className} style={{ height: matchHeight, marginBottom: (i + 1 < numMatches ? matchHeight : 0) }} />\n\t\t\t\t<MatchBox\n\t\t\t\t\tempty={i < emptyMatches}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\touter={outerRound}\n\t\t\t\t\theight={matchHeight}\n\t\t\t\t\tspacing={i + 1 < maxMatches ? matchHeight : 0} // Do not add spacing to the last match in the round column\n\t\t\t\t/>\n\n\t\t\t)\n\t\t})\n\t\treturn matches\n\n\t}\n\treturn (\n\t\t<div className='wpbb-round'>\n\t\t\t<RoundHeader round={round} updateRoundName={updateRoundName} />\n\t\t\t<div className='wpbb-round__body'>\n\t\t\t\t{buildMatches()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst NumRoundsSelector = (props) => {\n\tconst {\n\t\tnumRounds,\n\t\tsetNumRounds\n\t} = props\n\n\tconst minRounds = 1;\n\tconst maxRounds = 6;\n\n\tconst options = Array.from(Array(maxRounds - minRounds + 1).keys()).map((i) => {\n\t\treturn (\n\t\t\t<option value={i + minRounds}>{i + minRounds}</option>\n\t\t)\n\t})\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tconsole.log(num)\n\t\tsetNumRounds(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tNumber of Rounds:\n\t\t\t</label>\n\t\t\t<select value={numRounds} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nconst NumWildcardsSelector = (props) => {\n\tconst {\n\t\tnumWildcards,\n\t\tsetNumWildcards,\n\t\tmaxWildcards,\n\t} = props\n\tconsole.log('maxWildcards', maxWildcards)\n\n\tconst minWildcards = 0;\n\n\t// const options = Array.from(Array(maxWildcards - minWildcards + 1).keys()).map((i) => {\n\t// \treturn (\n\t// \t\t// Number of wildcards must be an even number\n\t// \t\t<option value={i + minWildcards}>{i + minWildcards}</option>\n\t// \t)\n\t// })\n\t// Number of wildcards must be an even number or 0\n\tconst options = Array.from(Array(maxWildcards / 2 + 1).keys()).map((i) => {\n\t\tconsole.log('i', i)\n\t\tconsole.log('i * 2', i * 2)\n\t\treturn (\n\t\t\t<option value={i * 2}>{i * 2}</option>\n\t\t)\n\t})\n\n\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tconsole.log('num', num)\n\t\tsetNumWildcards(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tWildcard Games:\n\t\t\t</label>\n\t\t\t<select value={numWildcards} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nexport const Bracket = (props) => {\n\tconst { numRounds, numWildcards } = props\n\tconst [rounds, setRounds] = useState<Round[]>([])\n\n\tconst updateRoundName = (roundId: number, name: string) => {\n\t\tconst newRounds = rounds.map((round) => {\n\t\t\tif (round.id === roundId) {\n\t\t\t\tround.name = name\n\t\t\t}\n\t\t\treturn round\n\t\t})\n\t\tsetRounds(newRounds)\n\t}\n\n\tuseEffect(() => {\n\t\tsetRounds(Array.from(Array(numRounds).keys()).map((i) => {\n\t\t\t// The number of matches in a round is equal to 2^depth unless it's the first round\n\t\t\t// and there are wildcards. In that case, the number of matches equals the number of wildcards\n\t\t\tconst numMatches = i === numRounds - 1 && numWildcards > 0 ? numWildcards : 2 ** i\n\t\t\tconsole.log('bracket numMatches', numMatches)\n\t\t\treturn new Round(i + 1, `Round ${numRounds - i}`, i + 1, numRounds - i, numMatches, [])\n\t\t}))\n\t}, [numRounds, numWildcards])\n\n\tconst targetHeight = 800;\n\n\t// The number of rounds sets the initial height of each match\n\t// const firstRoundMatchHeight = targetHeight / rounds.length / 2;\n\tconst firstRoundMatchHeight = targetHeight / 2 ** (rounds.length - 2) / 2;\n\n\t/**\n\t * Build rounds in two directions, left to right and right to left\n\t */\n\tconst buildRounds2 = (rounds: Round[]) => {\n\t\t// Assume rounds are sorted by depth\n\t\t// Rendering from left to right, sort by depth descending\n\t\tconst numDirections = 2\n\n\t\treturn [\n\t\t\t...rounds.slice(1).reverse().map((round, idx) =>\n\t\t\t\t<RoundComponent\n\t\t\t\t\tround={round} direction={Direction.TopLeft}\n\t\t\t\t\tnumDirections={numDirections}\n\t\t\t\t\tmatchHeight={2 ** idx * firstRoundMatchHeight}\n\t\t\t\t\tupdateRoundName={updateRoundName}\n\t\t\t\t/>\n\t\t\t),\n\t\t\t// handle final round differently\n\t\t\t<FinalRound round={rounds[0]} updateRoundName={updateRoundName} />,\n\t\t\t...rounds.slice(1).map((round, idx, arr) =>\n\t\t\t\t<RoundComponent round={round}\n\t\t\t\t\tdirection={Direction.TopRight}\n\t\t\t\t\tnumDirections={numDirections}\n\t\t\t\t\tmatchHeight={2 ** (arr.length - 1 - idx) * firstRoundMatchHeight}\n\t\t\t\t\tupdateRoundName={updateRoundName}\n\t\t\t\t/>\n\t\t\t)\n\t\t]\n\t}\n\n\treturn (\n\t\t<div className='wpbb-bracket'>\n\t\t\t{rounds.length > 0 && buildRounds2(rounds)}\n\t\t</div>\n\t)\n}\n\nexport const BracketModal = (props) => {\n\tconst {\n\t\tshow,\n\t\thandleCancel,\n\t\thandleSave,\n\t} = props;\n\tconst [numRounds, setNumRounds] = useState(4);\n\tconst [numWildcards, setNumWildcards] = useState(0);\n\t// The max number of wildcards is 2 less than the possible number of matches in the first round\n\t// (2^numRounds - 2)\n\tconst maxWildcards = 2 ** (numRounds - 1) - 2;\n\tconsole.log(maxWildcards)\n\n\treturn (\n\t\t<Modal className='wpbb-bracket-modal' show={show} onHide={handleCancel} size='xl' centered={true}>\n\t\t\t<Modal.Header className='wpbb-bracket-modal__header' closeButton>\n\t\t\t\t<Modal.Title>Create Bracket</Modal.Title>\n\t\t\t\t<form className='wpbb-options-form'>\n\t\t\t\t\t<NumRoundsSelector numRounds={numRounds} setNumRounds={setNumRounds} />\n\t\t\t\t\t<NumWildcardsSelector numWildcards={numWildcards} setNumWildcards={setNumWildcards} maxWildcards={maxWildcards} />\n\t\t\t\t</form>\n\t\t\t</Modal.Header >\n\t\t\t<Modal.Body className='pt-0'><Bracket numRounds={numRounds} numWildcards={numWildcards} /></Modal.Body>\n\t\t\t<Modal.Footer className='wpbb-bracket-modal__footer'>\n\t\t\t\t<Button variant=\"secondary\" onClick={handleCancel}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"primary\" onClick={handleSave}>\n\t\t\t\t\tSave Changes\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { BracketModal, Bracket } from '../bracket_builder/Bracket';\n\nclass Sport {\n\tid: number;\n\tname: string;\n\tteams: Team[];\n\tconstructor(id: number, name: string, teams: Team[]) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.teams = teams;\n\t}\n}\n\nclass Team {\n\tid: number;\n\tname: string;\n\tconstructor(id: number, name: string) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n}\n\n\n\nconst Settings = () => {\n\tconst [showBracketModal, setShowBracketModal] = useState(false)\n\n\tconst handleCloseBracketModal = () => setShowBracketModal(false);\n\tconst handleSaveBracketModal = () => setShowBracketModal(false);\n\tconst handleShowBracketModal = () => setShowBracketModal(true);\n\treturn (\n\t\t<div>\n\t\t\t<h3 className='mt-4'>Bracket Builder Settings</h3>\n\n\t\t\t<Button variant='primary' className='mt-6' onClick={handleShowBracketModal}>Save</Button>\n\t\t\t<BracketModal show={showBracketModal} handleCancel={handleCloseBracketModal} handleSave={handleSaveBracketModal} />\n\t\t\t<Bracket />\n\t\t</div>\n\t);\n}\n\n\nclass BracketBuilderApi {\n\turl: string;\n\t// static _sportsApi: SportsApi;\n\t// static _bracketApi: BracketApi;\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tthis.url = wpbb_ajax_obj.rest_url;\n\t}\n\t// static getBracketApi() {\n\t// \tif (!BracketBuilderApi._bracketApi) {\n\t// \t\t// @ts-ignore\n\t// \t\tBracketBuilderApi._bracketApi = new BracketApi();\n\t// \t}\n\t// \treturn BracketBuilderApi._bracketApi;\n\t// }\n\n\t// static getSportsApi() {\n\t// \tif (!BracketBuilderApi._sportsApi) {\n\t// \t\t// @ts-ignore\n\t// \t\tBracketBuilderApi._sportsApi = new SportsApi();\n\t// \t}\n\t// \treturn BracketBuilderApi._sportsApi;\n\t// }\n\tasync performRequest(path: string, method: string, body: any) {\n\t\tconst response = await fetch(`${this.url}${path}`, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(body)\n\t\t});\n\t\treturn response.json();\n\t}\n}\n\nclass BracketApi extends BracketBuilderApi {\n\tpath: string = 'brackets';\n\tasync getBrackets() {\n\t\treturn await this.performRequest(this.path, 'GET', {});\n\t}\n}\n\n// class SportsApi extends BracketBuilderApi {\n// \tpath: string = 'sports';\n// \tasync getSports() {\n// \t\treturn await this.performRequest(this.path, 'GET', {});\n// \t}\n// }\n// SportsApi.getInstance().getSports().then((sports) => {\n// \tconsole.log(sports)\n// })\nconst fetchBrackets = async () => {\n\t// @ts-ignore\n\tconst res = await fetch(`${wpbb_ajax_obj.rest_url}brackets`);\n\tconst brackets = await res.json();\n\tconsole.log(brackets)\n}\nfetchBrackets();\n\nexport default Settings; "],"names":["React","useState","useEffect","Button","Modal","Form","Direction","Node","constructor","id","name","left","right","depth","parent_id","Round","roundNum","numMatches","nodes","TeamSlot","props","createElement","className","MatchBox","_ref","node1","node2","empty","direction","outer","height","spacing","console","log","TopLeft","BottomLeft","Fragment","style","marginBottom","Spacer","_ref2","grow","flexGrow","RoundHeader","editRoundName","setEditRoundName","nameBuffer","setNameBuffer","round","updateRoundName","doneEditing","Control","type","value","autoFocus","onFocus","e","target","select","onBlur","onChange","onKeyUp","key","onClick","FinalRound","RoundComponent","numDirections","matchHeight","buildMatches","maxMatches","emptyMatches","outerRound","matches","Array","from","keys","map","i","NumRoundsSelector","numRounds","setNumRounds","minRounds","maxRounds","options","handleChange","event","num","parseInt","NumWildcardsSelector","numWildcards","setNumWildcards","maxWildcards","minWildcards","Bracket","rounds","setRounds","roundId","newRounds","targetHeight","firstRoundMatchHeight","length","buildRounds2","slice","reverse","idx","arr","TopRight","BracketModal","show","handleCancel","handleSave","onHide","size","centered","Header","closeButton","Title","Body","Footer","variant","Sport","teams","Team","Settings","showBracketModal","setShowBracketModal","handleCloseBracketModal","handleSaveBracketModal","handleShowBracketModal","BracketBuilderApi","url","wpbb_ajax_obj","rest_url","performRequest","path","method","body","response","fetch","headers","JSON","stringify","json","BracketApi","getBrackets","fetchBrackets","res","brackets"],"sourceRoot":""}