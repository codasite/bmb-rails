{"version":3,"file":"src_components_settings_Settings_tsx.js","mappings":"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","sources":["webpack://react-bracket-builder/./src/components/bracket_builder/Bracket.tsx","webpack://react-bracket-builder/./src/components/settings/Settings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, InputGroup } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\n\ntype Nullable<T> = T | null;\n\nenum WildcardPlacement {\n\tTop = 0,\n\tBottom = 1,\n\tCenter = 2,\n\tSplit = 3,\n}\n\n// Direction enum\nenum Direction {\n\tTopLeft = 0,\n\tTopRight = 1,\n\tBottomLeft = 2,\n\tBottomRight = 3,\n}\n\nclass Team {\n\tname: string;\n\t// constructor(id: number, name: string) {\n\t// \tthis.id = id;\n\t// \tthis.name = name;\n\t// }\n\tconstructor(name: string) {\n\t\tthis.name = 'Packers';\n\t}\n\n\tclone(): Team {\n\t\treturn new Team(this.name);\n\t}\n}\n\n\nclass MatchNode {\n\tleftTeam: Nullable<Team> = null;\n\trightTeam: Nullable<Team> = null;\n\tresult: Nullable<Team> = null;\n\tleft: Nullable<MatchNode> = null;\n\tright: Nullable<MatchNode> = null;\n\tparent: Nullable<MatchNode> = null;\n\tdepth: number;\n\n\tconstructor(parent: Nullable<MatchNode>, depth: number) {\n\t\tthis.depth = depth;\n\t\tthis.parent = parent;\n\t}\n\n\tclone(): MatchNode {\n\t\tconst match = this;\n\t\tconst clone = new MatchNode(null, match.depth);\n\n\t\tclone.leftTeam = match.leftTeam ? match.leftTeam.clone() : null;\n\t\tclone.rightTeam = match.rightTeam ? match.rightTeam.clone() : null;\n\n\t\tif (match.result) {\n\t\t\tif (match.result === match.leftTeam) {\n\t\t\t\tclone.result = clone.leftTeam;\n\t\t\t} else if (match.result === match.rightTeam) {\n\t\t\t\tclone.result = clone.rightTeam;\n\t\t\t}\n\t\t}\n\n\t\treturn clone;\n\t}\n\n}\n\nclass Round {\n\tid: number;\n\tname: string;\n\tdepth: number;\n\troundNum: number;\n\tmatches: Array<Nullable<MatchNode>>;\n\n\tconstructor(id: number, name: string, depth: number, roundNum: number) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.depth = depth;\n\t\tthis.roundNum = roundNum;\n\t\tthis.matches = [];\n\t}\n}\n\nclass WildcardRange {\n\tconstructor(public min: number, public max: number) { }\n\n\ttoString(): string {\n\t\treturn `${this.min}-${this.max}`;\n\t}\n}\n\nclass MatchTree {\n\troot: MatchNode | null\n\trounds: Round[]\n\n\tconstructor(numRounds: number, numWildcards: number, wildcardsPlacement: WildcardPlacement) {\n\t\tthis.rounds = this.buildRounds(numRounds, numWildcards, wildcardsPlacement)\n\t}\n\n\tbuildRounds(numRounds: number, numWildcards: number, wildcardPlacement: WildcardPlacement): Round[] {\n\t\t// The number of matches in a round is equal to 2^depth unless it's the first round\n\t\t// and there are wildcards. In that case, the number of matches equals the number of wildcards\n\t\tconst rootMatch = new MatchNode(null, 0)\n\t\tconst finalRound = new Round(1, `Round ${numRounds}`, 0, numRounds)\n\t\tfinalRound.matches = [rootMatch]\n\t\tconst rounds = [finalRound]\n\n\t\tfor (let i = 1; i < numRounds; i++) {\n\n\t\t\tlet ranges: WildcardRange[] = []\n\n\t\t\tif (i === numRounds - 1 && numWildcards > 0) {\n\t\t\t\t// const placement = WildcardPlacement.Top\n\t\t\t\tconst placement = wildcardPlacement\n\t\t\t\tconst maxNodes = 2 ** i\n\t\t\t\tconst range1 = this.getWildcardRange(0, maxNodes / 2, numWildcards / 2, placement)\n\t\t\t\tconst range2 = this.getWildcardRange(maxNodes / 2, maxNodes, numWildcards / 2, placement)\n\t\t\t\tranges = [...range1, ...range2]\n\t\t\t}\n\n\t\t\tconst round = new Round(i + 1, `Round ${numRounds - i}`, i, numRounds - i);\n\t\t\tconst maxMatches = 2 ** i\n\t\t\tconst matches: (MatchNode | null)[] = []\n\t\t\tfor (let x = 0; x < maxMatches; x++) {\n\t\t\t\tif (ranges.length > 0) {\n\t\t\t\t\t// check to see if x is in the range of any of the wildcard ranges\n\t\t\t\t\tconst inRange = ranges.some(range => {\n\t\t\t\t\t\treturn x >= range.min && x < range.max\n\t\t\t\t\t})\n\t\t\t\t\tif (!inRange) {\n\t\t\t\t\t\tmatches[x] = null\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// const parentIndex = Math.floor(x / 2)\n\t\t\t\t// const parent = rounds[i - 1].matches[parentIndex]\n\t\t\t\tconst parent = this.getParent(x, i, rounds)\n\t\t\t\tconst match = new MatchNode(parent, i)\n\t\t\t\tthis.assignMatchToParent(x, match, parent)\n\t\t\t\tmatches[x] = match\n\t\t\t}\n\t\t\tround.matches = matches\n\t\t\trounds[i] = round\n\t\t};\n\t\treturn rounds\n\t}\n\n\n\tgetWildcardRange(start: number, end: number, count: number, placement: WildcardPlacement): WildcardRange[] {\n\t\tswitch (placement) {\n\t\t\tcase WildcardPlacement.Top:\n\t\t\t\treturn [new WildcardRange(start, start + count)]\n\t\t\tcase WildcardPlacement.Bottom:\n\t\t\t\treturn [new WildcardRange(end - count, end)]\n\t\t\tcase WildcardPlacement.Center:\n\t\t\t\tconst offset = (end - start - count) / 2;\n\t\t\t\treturn [new WildcardRange(start + offset, end - offset)];\n\t\t\tcase WildcardPlacement.Split:\n\t\t\t\treturn [new WildcardRange(start, start + count / 2), new WildcardRange(end - count / 2, end)]\n\t\t}\n\t}\n\n\tclone(): MatchTree {\n\t\tconst tree = this\n\t\tconst newTree = new MatchTree(0, 0, WildcardPlacement.Center)\n\t\t// First, create the new rounds.\n\t\tnewTree.rounds = tree.rounds.map((round) => {\n\t\t\tconst newRound = new Round(round.id, round.name, round.depth, round.roundNum);\n\t\t\treturn newRound;\n\t\t});\n\t\t// Then, iterate over the new rounds to create the matches and update their parent relationships.\n\t\tnewTree.rounds.forEach((round, roundIndex) => {\n\t\t\tround.matches = tree.rounds[roundIndex].matches.map((match, matchIndex) => {\n\t\t\t\tif (match === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst newMatch = match.clone();\n\t\t\t\tconst parent = this.getParent(matchIndex, roundIndex, newTree.rounds);\n\t\t\t\tnewMatch.parent = parent;\n\t\t\t\tthis.assignMatchToParent(matchIndex, newMatch, parent);\n\t\t\t\treturn newMatch;\n\t\t\t});\n\t\t});\n\t\treturn newTree;\n\t}\n\t// \tnewTree.rounds = tree.rounds.map((round, i, rounds) => {\n\t// \t\tconst newRound = new Round(round.id, round.name, round.depth, round.roundNum)\n\t// \t\tconsole.log('i', i)\n\t// \t\tconsole.log('rounds', rounds)\n\t// \t\tnewRound.matches = round.matches.map((match, x, matches) => {\n\t// \t\t\tif (match === null) {\n\t// \t\t\t\treturn null\n\t// \t\t\t}\n\t// \t\t\tconst newMatch = match.clone()\n\t// \t\t\tconsole.log('x', x)\n\t// \t\t\tconsole.log('matches', matches)\n\t// \t\t\tconst parent = this.getParent(x, i, newTree.rounds)\n\t// \t\t\tnewMatch.parent = parent\n\t// \t\t\tthis.assignMatchToParent(x, newMatch, parent)\n\t// \t\t\treturn newMatch\n\t// \t\t})\n\t// \t\treturn newRound\n\t// \t})\n\t// \treturn newTree\n\t// }\n\n\tgetParent(matchIndex: number, roundIndex: number, rounds: Round[]): MatchNode | null {\n\t\tif (roundIndex === 0) {\n\t\t\treturn null\n\t\t}\n\t\tconst parentIndex = Math.floor(matchIndex / 2)\n\t\treturn rounds[roundIndex - 1].matches[parentIndex]\n\t}\n\n\tassignMatchToParent(matchIndex: number, match: MatchNode, parent: MatchNode | null) {\n\t\tif (parent === null) {\n\t\t\treturn\n\t\t}\n\t\tif (matchIndex % 2 === 0) {\n\t\t\tparent.left = match\n\t\t} else {\n\t\t\tparent.right = match\n\t\t}\n\t}\n}\n\nconst TeamSlot = (props) => {\n\tconst team: Team | null = props.team\n\tconst updateTeam = props.updateTeam\n\n\tconst handleUpdateTeam = (e) => {\n\t\te.stopPropagation()\n\t\tupdateTeam('hi')\n\t}\n\n\treturn (\n\t\t<div className={props.className} onClick={(e) => handleUpdateTeam(e)}>\n\t\t\t<span className='wpbb-team-name'>{team ? team.name : ''}</span>\n\t\t</div>\n\t)\n}\n\nconst MatchBox = (props) => {\n\tconst match: MatchNode | null = props.match\n\tconst direction: Direction = props.direction\n\tconst height: number = props.height\n\tconst spacing: number = props.spacing\n\t// const updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\tconst updateTeam = props.updateTeam\n\n\t// const updateTeam = (name: string, left: boolean) => {\n\t// \tconsole.log('updateTeam', name)\n\t// \t// updateTeam(match.roundId, match.matchIndex, left, name)\n\t// }\n\n\tif (match === null) {\n\t\treturn (\n\t\t\t<div className='wpbb-match-box-empty' style={{ height: height + spacing }} />\n\t\t)\n\t}\n\n\n\tlet className: string;\n\n\tif (direction === Direction.TopLeft || direction === Direction.BottomLeft) {\n\t\t// Left side of the bracket\n\t\tclassName = 'wpbb-match-box-left'\n\t} else {\n\t\t// Right side of the bracket\n\t\tclassName = 'wpbb-match-box-right'\n\t}\n\n\tconst upperOuter = match.left === null\n\tconst lowerOuter = match.right === null\n\n\tif (upperOuter && lowerOuter) {\n\t\t// First round\n\t\tclassName += '-outer'\n\t} else if (upperOuter) {\n\t\t// Upper bracket\n\t\tclassName += '-outer-upper'\n\t} else if (lowerOuter) {\n\t\t// Lower bracket\n\t\tclassName += '-outer-lower'\n\t}\n\n\t// This component renders the lines connecting two nodes representing a \"game\"\n\t// These should be evenly spaced in the column and grow according to the number of other matches in the round\n\treturn (\n\t\t<div className={className} style={{ height: height, marginBottom: spacing }}>\n\t\t\t<TeamSlot className='wpbb-team1' team={match.leftTeam} updateTeam={(name: string) => updateTeam(true, name)} />\n\t\t\t<TeamSlot className='wpbb-team2' team={match.rightTeam} updateTeam={(name: string) => updateTeam(false, name)} />\n\t\t</div>\n\t)\n}\n\nconst Spacer = ({ grow = '1' }) => {\n\treturn (\n\t\t<div style={{ flexGrow: grow }} />\n\t)\n}\n\nconst RoundHeader = (props) => {\n\tconst [editRoundName, setEditRoundName] = useState(false);\n\tconst [nameBuffer, setNameBuffer] = useState('');\n\tconst round: Round = props.round;\n\tconst updateRoundName = props.updateRoundName;\n\n\tuseEffect(() => {\n\t\tsetNameBuffer(props.round.name)\n\t}, [props.round.name])\n\n\tconst doneEditing = () => {\n\t\tsetEditRoundName(false)\n\t\tprops.updateRoundName(props.round.id, nameBuffer)\n\t}\n\n\treturn (\n\t\t<div className='wpbb-round__header'>\n\t\t\t{editRoundName ? <Form.Control type='text'\n\t\t\t\tvalue={nameBuffer}\n\t\t\t\tautoFocus\n\t\t\t\tonFocus={(e) => e.target.select()}\n\t\t\t\tonBlur={() => doneEditing()}\n\t\t\t\tonChange={(e) => setNameBuffer(e.target.value)}\n\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\tdoneEditing()\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<span onClick={() => setEditRoundName(true)}>{round.name}</span>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nconst FinalRound = (props) => {\n\tconst round: Round = props.round;\n\tconst updateRoundName = props.updateRoundName;\n\treturn (\n\t\t<div className='wpbb-round'>\n\t\t\t<RoundHeader round={round} updateRoundName={updateRoundName} />\n\t\t\t<div className='wpbb-round__body'>\n\t\t\t\t<Spacer grow='2' />\n\t\t\t\t<div className='wpbb-final-match'>\n\t\t\t\t\t<TeamSlot className='wpbb-team1' />\n\t\t\t\t\t<TeamSlot className='wpbb-team2' />\n\t\t\t\t</div>\n\t\t\t\t<Spacer grow='2' />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nconst MatchColumn = (props) => {\n\tconst round: Round = props.round;\n\tconst matches: MatchNode[] = props.matches;\n\tconst direction: Direction = props.direction;\n\tconst matchHeight: number = props.matchHeight;\n\tconst updateRoundName = props.updateRoundName;\n\tconst updateTeam = props.updateTeam;\n\t// const updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\n\tconst buildMatches = () => {\n\t\tconst matchBoxes = matches.map((match, i) => {\n\t\t\tconst matchIndex = direction === Direction.TopLeft || direction === Direction.BottomLeft ? i : i + matches.length\n\t\t\treturn (\n\t\t\t\t<MatchBox\n\t\t\t\t\tmatch={match}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\theight={matchHeight}\n\t\t\t\t\tspacing={i + 1 < matches.length ? matchHeight : 0} // Do not add spacing to the last match in the round column\n\t\t\t\t\tupdateTeam={(left: boolean, name: string) => updateTeam(round.id, matchIndex, left, name)}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t\treturn matchBoxes\n\n\t}\n\treturn (\n\t\t<div className='wpbb-round'>\n\t\t\t<RoundHeader round={round} updateRoundName={updateRoundName} />\n\t\t\t<div className='wpbb-round__body'>\n\t\t\t\t{buildMatches()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst NumRoundsSelector = (props) => {\n\tconst {\n\t\tnumRounds,\n\t\tsetNumRounds\n\t} = props\n\n\tconst minRounds = 1;\n\tconst maxRounds = 6;\n\n\tconst options = Array.from(Array(maxRounds - minRounds + 1).keys()).map((i) => {\n\t\treturn (\n\t\t\t<option value={i + minRounds}>{i + minRounds}</option>\n\t\t)\n\t})\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetNumRounds(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tNumber of Rounds:\n\t\t\t</label>\n\t\t\t<select value={numRounds} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nconst NumWildcardsSelector = (props) => {\n\tconst {\n\t\tnumWildcards,\n\t\tsetNumWildcards,\n\t\tmaxWildcards,\n\t} = props\n\n\tconst minWildcards = 0;\n\n\t// Number of wildcards must be an even number or 0\n\tlet options = [\n\t\t<option value={0}>0</option>\n\t]\n\toptions = [...options, ...Array.from(Array(maxWildcards / 2).keys()).reverse().map((i) => {\n\t\treturn (\n\t\t\t<option value={(i + 1) * 2}>{(i + 1) * 2}</option>\n\t\t)\n\t})]\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetNumWildcards(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tWildcard Games:\n\t\t\t</label>\n\t\t\t<select value={numWildcards} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nconst WildcardPlacementSelector = (props) => {\n\tconst {\n\t\twildcardPlacement,\n\t\tsetWildcardPlacement,\n\t} = props\n\n\tconst options = [\n\t\t<option value={WildcardPlacement.Bottom}>Bottom</option>,\n\t\t<option value={WildcardPlacement.Top}>Top</option>,\n\t\t<option value={WildcardPlacement.Split}>Split</option>,\n\t\t<option value={WildcardPlacement.Center}>Centered</option>,\n\t]\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetWildcardPlacement(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tWildcard Placement:\n\t\t\t</label>\n\t\t\t<select value={wildcardPlacement} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nexport const Bracket = (props) => {\n\tconst { numRounds, numWildcards, wildcardPlacement } = props\n\t// const [rounds, setRounds] = useState<Round[]>([])\n\tconst [matchTree, setMatchTree] = useState<MatchTree>(new MatchTree(numRounds, numWildcards, wildcardPlacement))\n\tconst rounds = matchTree.rounds\n\n\t// const updateRoundName = (roundId: number, name: string) => {\n\t// \tconst newRounds = rounds.map((round) => {\n\t// \t\tif (round.id === roundId) {\n\t// \t\t\tround.name = name\n\t// \t\t}\n\t// \t\treturn round\n\t// \t})\n\t// \t// setRounds(newRounds)\n\t// }\n\tconst updateRoundName = (roundId: number, name: string) => {\n\t\tconst newMatchTree = matchTree.clone();\n\t\tconst roundToUpdate = newMatchTree.rounds.find((round) => round.id === roundId);\n\t\tif (roundToUpdate) {\n\t\t\troundToUpdate.name = name;\n\t\t\tsetMatchTree(newMatchTree);\n\t\t}\n\t};\n\n\t// const updateTeam = ()\n\n\tconst updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\t\tconst newMatchTree = matchTree.clone();\n\t\tconst roundToUpdate = newMatchTree.rounds.find((round) => round.id === roundId);\n\t\tif (roundToUpdate) {\n\t\t\tconst matchToUpdate = roundToUpdate.matches[matchIndex];\n\t\t\tif (matchToUpdate) {\n\t\t\t\tif (left) {\n\t\t\t\t\tconst team = matchToUpdate.leftTeam;\n\t\t\t\t\tif (team) {\n\t\t\t\t\t\tteam.name = name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatchToUpdate.leftTeam = new Team(name);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst team = matchToUpdate.rightTeam;\n\t\t\t\t\tif (team) {\n\t\t\t\t\t\tteam.name = name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatchToUpdate.rightTeam = new Team(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetMatchTree(newMatchTree);\n\t\t}\n\t}\n\n\n\tuseEffect(() => {\n\t\tconst matchTree = new MatchTree(numRounds, numWildcards, wildcardPlacement)\n\t\t// setRounds(matchTree.rounds)\n\t\tsetMatchTree(matchTree)\n\t\t// setRounds(buildRounds(numRounds, numWildcards))\n\t}, [numRounds, numWildcards, wildcardPlacement])\n\n\tconst targetHeight = 800;\n\n\t// The number of rounds sets the initial height of each match\n\t// const firstRoundMatchHeight = targetHeight / rounds.length / 2;\n\tconst firstRoundMatchHeight = targetHeight / 2 ** (rounds.length - 2) / 2;\n\n\t/**\n\t * Build rounds in two directions, left to right and right to left\n\t */\n\tconst buildRounds2 = (rounds: Round[]) => {\n\t\t// Assume rounds are sorted by depth\n\t\t// Rendering from left to right, sort by depth descending\n\t\tconst numDirections = 2\n\n\t\treturn [\n\t\t\t...rounds.slice(1).reverse().map((round, idx) => {\n\t\t\t\t// Get the first half of matches for this column\n\t\t\t\tconst colMatches = round.matches.slice(0, round.matches.length / 2)\n\n\t\t\t\treturn <MatchColumn\n\t\t\t\t\tmatches={colMatches}\n\t\t\t\t\tround={round} direction={Direction.TopLeft}\n\t\t\t\t\tnumDirections={numDirections}\n\t\t\t\t\tmatchHeight={2 ** idx * firstRoundMatchHeight}\n\t\t\t\t\tupdateRoundName={updateRoundName}\n\t\t\t\t\tupdateTeam={updateTeam}\n\t\t\t\t/>\n\t\t\t}),\n\t\t\t// handle final round differently\n\t\t\t<FinalRound round={rounds[0]} updateRoundName={updateRoundName} />,\n\t\t\t...rounds.slice(1).map((round, idx, arr) => {\n\t\t\t\t// Get the second half of matches for this column\n\t\t\t\tconst colMatches = round.matches.slice(round.matches.length / 2)\n\n\t\t\t\treturn <MatchColumn round={round}\n\t\t\t\t\tmatches={colMatches}\n\t\t\t\t\tdirection={Direction.TopRight}\n\t\t\t\t\tnumDirections={numDirections}\n\t\t\t\t\tmatchHeight={2 ** (arr.length - 1 - idx) * firstRoundMatchHeight}\n\t\t\t\t\tupdateRoundName={updateRoundName}\n\t\t\t\t\tupdateTeam={updateTeam}\n\t\t\t\t/>\n\t\t\t})\n\t\t]\n\t}\n\n\treturn (\n\t\t<div className='wpbb-bracket'>\n\t\t\t{rounds.length > 0 && buildRounds2(rounds)}\n\t\t</div>\n\t)\n}\n\nexport const BracketModal = (props) => {\n\tconst {\n\t\tshow,\n\t\thandleCancel,\n\t\thandleSave,\n\t} = props;\n\tconst [numRounds, setNumRounds] = useState(4);\n\tconst [numWildcards, setNumWildcards] = useState(0);\n\tconst [wildcardPlacement, setWildcardPlacement] = useState(WildcardPlacement.Bottom);\n\t// The max number of wildcards is 2 less than the possible number of matches in the first round\n\t// (2^numRounds - 2)\n\tconst maxWildcards = 2 ** (numRounds - 1) - 2;\n\n\treturn (\n\t\t<Modal className='wpbb-bracket-modal' show={show} onHide={handleCancel} size='xl' centered={true}>\n\t\t\t<Modal.Header className='wpbb-bracket-modal__header' closeButton>\n\t\t\t\t<Modal.Title>Create Bracket</Modal.Title>\n\t\t\t\t<form className='wpbb-options-form'>\n\t\t\t\t\t<NumRoundsSelector numRounds={numRounds} setNumRounds={setNumRounds} />\n\t\t\t\t\t<NumWildcardsSelector numWildcards={numWildcards} setNumWildcards={setNumWildcards} maxWildcards={maxWildcards} />\n\t\t\t\t\t<WildcardPlacementSelector wildcardPlacement={wildcardPlacement} setWildcardPlacement={setWildcardPlacement} />\n\t\t\t\t</form>\n\t\t\t</Modal.Header >\n\t\t\t<Modal.Body className='pt-0'><Bracket numRounds={numRounds} numWildcards={numWildcards} wildcardPlacement={wildcardPlacement} /></Modal.Body>\n\t\t\t<Modal.Footer className='wpbb-bracket-modal__footer'>\n\t\t\t\t<Button variant=\"secondary\" onClick={handleCancel}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"primary\" onClick={handleSave}>\n\t\t\t\t\tSave Changes\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { BracketModal, Bracket } from '../bracket_builder/Bracket';\n\nclass Sport {\n\tid: number;\n\tname: string;\n\tteams: Team[];\n\tconstructor(id: number, name: string, teams: Team[]) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.teams = teams;\n\t}\n}\n\nclass Team {\n\tid: number;\n\tname: string;\n\tconstructor(id: number, name: string) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n}\n\n\n\nconst Settings = () => {\n\tconst [showBracketModal, setShowBracketModal] = useState(false)\n\n\tconst handleCloseBracketModal = () => setShowBracketModal(false);\n\tconst handleSaveBracketModal = () => setShowBracketModal(false);\n\tconst handleShowBracketModal = () => setShowBracketModal(true);\n\treturn (\n\t\t<div>\n\t\t\t<h3 className='mt-4'>Bracket Builder Settings</h3>\n\n\t\t\t<Button variant='primary' className='mt-6' onClick={handleShowBracketModal}>Save</Button>\n\t\t\t<BracketModal show={showBracketModal} handleCancel={handleCloseBracketModal} handleSave={handleSaveBracketModal} />\n\t\t\t<Bracket />\n\t\t</div>\n\t);\n}\n\n\nclass BracketBuilderApi {\n\turl: string;\n\t// static _sportsApi: SportsApi;\n\t// static _bracketApi: BracketApi;\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tthis.url = wpbb_ajax_obj.rest_url;\n\t}\n\t// static getBracketApi() {\n\t// \tif (!BracketBuilderApi._bracketApi) {\n\t// \t\t// @ts-ignore\n\t// \t\tBracketBuilderApi._bracketApi = new BracketApi();\n\t// \t}\n\t// \treturn BracketBuilderApi._bracketApi;\n\t// }\n\n\t// static getSportsApi() {\n\t// \tif (!BracketBuilderApi._sportsApi) {\n\t// \t\t// @ts-ignore\n\t// \t\tBracketBuilderApi._sportsApi = new SportsApi();\n\t// \t}\n\t// \treturn BracketBuilderApi._sportsApi;\n\t// }\n\tasync performRequest(path: string, method: string, body: any) {\n\t\tconst response = await fetch(`${this.url}${path}`, {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(body)\n\t\t});\n\t\treturn response.json();\n\t}\n}\n\nclass BracketApi extends BracketBuilderApi {\n\tpath: string = 'brackets';\n\tasync getBrackets() {\n\t\treturn await this.performRequest(this.path, 'GET', {});\n\t}\n}\n\n// class SportsApi extends BracketBuilderApi {\n// \tpath: string = 'sports';\n// \tasync getSports() {\n// \t\treturn await this.performRequest(this.path, 'GET', {});\n// \t}\n// }\n// SportsApi.getInstance().getSports().then((sports) => {\n// \tconsole.log(sports)\n// })\nconst fetchBrackets = async () => {\n\t// @ts-ignore\n\tconst res = await fetch(`${wpbb_ajax_obj.rest_url}brackets`);\n\tconst brackets = await res.json();\n\tconsole.log(brackets)\n}\nfetchBrackets();\n\nexport default Settings; "],"names":["React","useState","useEffect","Button","Modal","Form","WildcardPlacement","Direction","Team","constructor","name","clone","MatchNode","leftTeam","rightTeam","result","left","right","parent","depth","match","Round","id","roundNum","matches","WildcardRange","min","max","toString","MatchTree","numRounds","numWildcards","wildcardsPlacement","rounds","buildRounds","wildcardPlacement","rootMatch","finalRound","i","ranges","placement","maxNodes","range1","getWildcardRange","range2","round","maxMatches","x","length","inRange","some","range","getParent","assignMatchToParent","start","end","count","Top","Bottom","Center","offset","Split","tree","newTree","map","newRound","forEach","roundIndex","matchIndex","newMatch","parentIndex","Math","floor","TeamSlot","props","team","updateTeam","handleUpdateTeam","e","stopPropagation","createElement","className","onClick","MatchBox","direction","height","spacing","style","TopLeft","BottomLeft","upperOuter","lowerOuter","marginBottom","Spacer","_ref","grow","flexGrow","RoundHeader","editRoundName","setEditRoundName","nameBuffer","setNameBuffer","updateRoundName","doneEditing","Control","type","value","autoFocus","onFocus","target","select","onBlur","onChange","onKeyUp","key","FinalRound","MatchColumn","matchHeight","buildMatches","matchBoxes","NumRoundsSelector","setNumRounds","minRounds","maxRounds","options","Array","from","keys","handleChange","event","num","parseInt","NumWildcardsSelector","setNumWildcards","maxWildcards","minWildcards","reverse","WildcardPlacementSelector","setWildcardPlacement","Bracket","matchTree","setMatchTree","roundId","newMatchTree","roundToUpdate","find","matchToUpdate","targetHeight","firstRoundMatchHeight","buildRounds2","numDirections","slice","idx","colMatches","arr","TopRight","BracketModal","show","handleCancel","handleSave","onHide","size","centered","Header","closeButton","Title","Body","Footer","variant","Sport","teams","Settings","showBracketModal","setShowBracketModal","handleCloseBracketModal","handleSaveBracketModal","handleShowBracketModal","BracketBuilderApi","url","wpbb_ajax_obj","rest_url","performRequest","path","method","body","response","fetch","headers","JSON","stringify","json","BracketApi","getBrackets","fetchBrackets","res","brackets","console","log"],"sourceRoot":""}