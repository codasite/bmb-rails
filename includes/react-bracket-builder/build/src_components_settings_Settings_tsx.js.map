{"version":3,"file":"src_components_settings_Settings_tsx.js","mappings":";;;;;;;;;;;;;AAkCA,MAAMA,UAAU,CAAC;EAERC,WAAW,GAAW,UAAU;EAExCC,WAAWA,CAAA,EAAG;IACb;IACA,IAAI,CAACC,OAAO,GAAGC,aAAa,CAACC,QAAQ;EACtC;EAEA,MAAMC,WAAWA,CAAA,EAA+B;IAC/C,MAAMC,GAAG,GAAG,MAAM,IAAI,CAACC,cAAc,CAAC,IAAI,CAACP,WAAW,EAAE,KAAK,CAAC;IAC9D,IAAIM,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MACvB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC1C;IACA;IACA,OAAOC,aAAa,CAAC,MAAMJ,GAAG,CAACK,IAAI,EAAE,CAAC;EACvC;EAEA,MAAMC,UAAUA,CAACC,EAAU,EAA4B;IACtD,MAAMP,GAAG,GAAG,MAAM,IAAI,CAACC,cAAc,CAAE,GAAE,IAAI,CAACP,WAAY,IAAGa,EAAG,EAAC,EAAE,KAAK,CAAC;IACzE,IAAIP,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MACvB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IACzC;IACA;IACA,OAAOC,aAAa,CAAC,MAAMJ,GAAG,CAACK,IAAI,EAAE,CAAC;EACvC;EAEA,MAAMG,aAAaA,CAACD,EAAU,EAAiB;IAC9C,MAAMP,GAAG,GAAG,MAAM,IAAI,CAACC,cAAc,CAAE,GAAE,IAAI,CAACP,WAAY,IAAGa,EAAG,EAAC,EAAE,QAAQ,CAAC;IAC5E,IAAIP,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MACvB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC5C;EACD;EAEA,MAAMM,SAASA,CAACF,EAAU,EAAEG,MAAe,EAAoB;IAC9D,MAAMC,IAAI,GAAI,GAAE,IAAI,CAACjB,WAAY,IAAGa,EAAG,IAAGG,MAAM,GAAG,UAAU,GAAG,YAAa,EAAC;IAC9E,MAAMV,GAAG,GAAG,MAAM,IAAI,CAACC,cAAc,CAACU,IAAI,EAAE,MAAM,CAAC;IACnD,IAAIX,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MACvB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACxC;IACA,MAAMS,SAAS,GAAG,MAAMZ,GAAG,CAACK,IAAI,EAAE;IAClC,OAAOO,SAAS;EACjB;EAGA,MAAMX,cAAcA,CAACU,IAAY,EAAEE,MAAc,EAAkB;IAAA,IAAhBC,IAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAChE,MAAMG,OAAO,GAAG;MACfL,MAAM;MACNM,OAAO,EAAE;QACR,cAAc,EAAE;MACjB;IACD,CAAC;IACD,IAAIN,MAAM,KAAK,KAAK,EAAE;MACrBK,OAAO,CAAC,MAAM,CAAC,GAAGE,IAAI,CAACC,SAAS,CAACC,aAAa,CAACR,IAAI,CAAC,CAAC;IACtD;IAEA,OAAO,MAAMS,KAAK,CAAE,GAAE,IAAI,CAAC3B,OAAQ,GAAEe,IAAK,EAAC,EAAEO,OAAO,CAAC;EACtD;AAED;;AAEA;AACA,SAASM,WAAWA,CAACC,GAAW,EAAU;EACzC,OAAOA,GAAG,CAACC,OAAO,CAAC,cAAc,EAAGC,KAAK,IACxCA,KAAK,CAACC,WAAW,EAAE,CAACF,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CACrD;AACF;;AAEA;AACA,SAAStB,aAAaA,CAACyB,GAAQ,EAAO;EACrC,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACvB,OAAOA,GAAG,CAACG,GAAG,CAAEC,KAAK,IAAK7B,aAAa,CAAC6B,KAAK,CAAC,CAAC;EAChD,CAAC,MAAM,IAAI,OAAOJ,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IACnD,OAAOK,MAAM,CAACC,OAAO,CAACN,GAAG,CAAC,CAACO,MAAM,CAAC,CAACC,WAAgB,EAAAC,IAAA,KAAmB;MAAA,IAAjB,CAACC,GAAG,EAAEN,KAAK,CAAC,GAAAK,IAAA;MAChED,WAAW,CAACb,WAAW,CAACe,GAAG,CAAC,CAAC,GAAGnC,aAAa,CAAC6B,KAAK,CAAC;MACpD,OAAOI,WAAW;IACnB,CAAC,EAAE,CAAC,CAAC,CAAC;EACP;EACA,OAAOR,GAAG;AACX;AAEA,SAASW,oBAAoBA,CAACf,GAAW,EAAU;EAClD,OAAOA,GAAG,CAACC,OAAO,CAAC,QAAQ,EAAGe,KAAK,IAAM,IAAGA,KAAK,CAACC,WAAW,EAAG,EAAC,CAAC;AACnE;;AAEA;AACA,SAASpB,aAAaA,CAACO,GAAQ,EAAO;EACrC,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACvB,OAAOA,GAAG,CAACG,GAAG,CAAEC,KAAK,IAAKX,aAAa,CAACW,KAAK,CAAC,CAAC;EAChD,CAAC,MAAM,IAAI,OAAOJ,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IACnD,OAAOK,MAAM,CAACC,OAAO,CAACN,GAAG,CAAC,CAACO,MAAM,CAAC,CAACC,WAAgB,EAAAM,KAAA,KAAmB;MAAA,IAAjB,CAACJ,GAAG,EAAEN,KAAK,CAAC,GAAAU,KAAA;MAChEN,WAAW,CAACG,oBAAoB,CAACD,GAAG,CAAC,CAAC,GAAGjB,aAAa,CAACW,KAAK,CAAC;MAC7D,OAAOI,WAAW;IACnB,CAAC,EAAE,CAAC,CAAC,CAAC;EACP;EACA,OAAOR,GAAG;AACX;AAEO,MAAMe,UAAU,GAAG,IAAInD,UAAU,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;ACpIS;AACuB;AAClC;AACD;AACW;AAGH;;AAG/C;AAAA,IACK2D,SAAS,0BAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAAA,OAATA,SAAS;AAAA,EAATA,SAAS;AAOd,MAAMC,IAAI,CAAC;EAEV;EACA;EACA;EACA;EACA1D,WAAWA,CAAC2D,IAAY,EAAE;IACzB,IAAI,CAACA,IAAI,GAAGA,IAAI;EACjB;EAEAC,KAAKA,CAAA,EAAS;IACb,OAAO,IAAIF,IAAI,CAAC,IAAI,CAACC,IAAI,CAAC;EAC3B;AACD;AAGA,MAAME,SAAS,CAAC;EACfC,KAAK,GAAmB,IAAI;EAC5BC,KAAK,GAAmB,IAAI;EAC5BC,MAAM,GAAmB,IAAI;EAC7BC,IAAI,GAAwB,IAAI;EAChCC,KAAK,GAAwB,IAAI;EACjCC,MAAM,GAAwB,IAAI;EAGlCnE,WAAWA,CAACmE,MAA2B,EAAEC,KAAa,EAAE;IACvD,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,MAAM,GAAGA,MAAM;EACrB;EAEAP,KAAKA,CAAA,EAAc;IAClB,MAAMd,KAAK,GAAG,IAAI;IAClB,MAAMc,KAAK,GAAG,IAAIC,SAAS,CAAC,IAAI,EAAEf,KAAK,CAACsB,KAAK,CAAC;IAE9CR,KAAK,CAACE,KAAK,GAAGhB,KAAK,CAACgB,KAAK,GAAGhB,KAAK,CAACgB,KAAK,CAACF,KAAK,EAAE,GAAG,IAAI;IACtDA,KAAK,CAACG,KAAK,GAAGjB,KAAK,CAACiB,KAAK,GAAGjB,KAAK,CAACiB,KAAK,CAACH,KAAK,EAAE,GAAG,IAAI;IAEtD,IAAId,KAAK,CAACkB,MAAM,EAAE;MACjB,IAAIlB,KAAK,CAACkB,MAAM,KAAKlB,KAAK,CAACgB,KAAK,EAAE;QACjCF,KAAK,CAACI,MAAM,GAAGJ,KAAK,CAACE,KAAK;MAC3B,CAAC,MAAM,IAAIhB,KAAK,CAACkB,MAAM,KAAKlB,KAAK,CAACiB,KAAK,EAAE;QACxCH,KAAK,CAACI,MAAM,GAAGJ,KAAK,CAACG,KAAK;MAC3B;IACD;IAEA,OAAOH,KAAK;EACb;AAED;AAEA,MAAMS,KAAK,CAAC;EAMXrE,WAAWA,CAACY,EAAU,EAAE+C,IAAY,EAAES,KAAa,EAAG;IACrD,IAAI,CAACxD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAAC+C,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACS,KAAK,GAAGA,KAAK;IAClB;EACD;AACD;;AAEA,MAAME,aAAa,CAAC;EACnBtE,WAAWA,CAAQuE,GAAW,EAASC,GAAW,EAAE;IAAA,KAAjCD,GAAW,GAAXA,GAAW;IAAA,KAASC,GAAW,GAAXA,GAAW;EAAI;EAEtDC,QAAQA,CAAA,EAAW;IAClB,OAAQ,GAAE,IAAI,CAACF,GAAI,IAAG,IAAI,CAACC,GAAI,EAAC;EACjC;AACD;AAEA,MAAME,SAAS,CAAC;EAGf;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOC,WAAWA,CAACC,SAAiB,EAAEC,YAAoB,EAAEC,iBAAoC,EAAa;IAC5G,MAAMC,IAAI,GAAG,IAAIL,SAAS,EAAE;IAC5BK,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,WAAW,CAACL,SAAS,EAAEC,YAAY,EAAEC,iBAAiB,CAAC;IAC1E,OAAOC,IAAI;EACZ;EAEA,OAAOE,WAAWA,CAACL,SAAiB,EAAEC,YAAoB,EAAEC,iBAAoC,EAAW;IAC1G;IACA;IACA,MAAMI,SAAS,GAAG,IAAIrB,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;IACxC,MAAMsB,UAAU,GAAG,IAAId,KAAK,CAAC,CAAC,EAAG,SAAQO,SAAU,EAAC,EAAE,CAAC,CAAC;IACxDO,UAAU,CAACC,OAAO,GAAG,CAACF,SAAS,CAAC;IAChC,MAAMF,MAAM,GAAG,CAACG,UAAU,CAAC;IAE3B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,SAAS,EAAES,CAAC,EAAE,EAAE;MAEnC,IAAIC,MAAuB,GAAG,EAAE;MAEhC,IAAID,CAAC,KAAKT,SAAS,GAAG,CAAC,IAAIC,YAAY,GAAG,CAAC,EAAE;QAC5C,MAAMU,SAAS,GAAGT,iBAAiB;QACnC,MAAMU,QAAQ,GAAG,CAAC,IAAIH,CAAC;QACvB,MAAMI,MAAM,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAEF,QAAQ,GAAG,CAAC,EAAEX,YAAY,GAAG,CAAC,EAAEU,SAAS,CAAC;QAClF,MAAMI,MAAM,GAAG,IAAI,CAACD,gBAAgB,CAACF,QAAQ,GAAG,CAAC,EAAEA,QAAQ,EAAEX,YAAY,GAAG,CAAC,EAAEU,SAAS,CAAC;QACzFD,MAAM,GAAG,CAAC,GAAGG,MAAM,EAAE,GAAGE,MAAM,CAAC;MAChC;MAEA,MAAMC,KAAK,GAAG,IAAIvB,KAAK,CAACgB,CAAC,GAAG,CAAC,EAAG,SAAQT,SAAS,GAAGS,CAAE,EAAC,EAAEA,CAAC,CAAC;MAC3D,MAAMQ,UAAU,GAAG,CAAC,IAAIR,CAAC;MACzB,MAAMD,OAA6B,GAAG,EAAE;MACxC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,EAAEC,CAAC,EAAE,EAAE;QACpC,IAAIR,MAAM,CAACjE,MAAM,GAAG,CAAC,EAAE;UACtB;UACA,MAAM0E,OAAO,GAAGT,MAAM,CAACU,IAAI,CAACC,KAAK,IAAI;YACpC,OAAOH,CAAC,IAAIG,KAAK,CAAC1B,GAAG,IAAIuB,CAAC,GAAGG,KAAK,CAACzB,GAAG;UACvC,CAAC,CAAC;UACF,IAAI,CAACuB,OAAO,EAAE;YACbX,OAAO,CAACU,CAAC,CAAC,GAAG,IAAI;YACjB;UACD;QACD;QACA;QACA;QACA,MAAM3B,MAAM,GAAG,IAAI,CAAC+B,SAAS,CAACJ,CAAC,EAAET,CAAC,EAAEL,MAAM,CAAC;QAC3C,MAAMlC,KAAK,GAAG,IAAIe,SAAS,CAACM,MAAM,EAAEkB,CAAC,CAAC;QACtC,IAAI,CAACc,mBAAmB,CAACL,CAAC,EAAEhD,KAAK,EAAEqB,MAAM,CAAC;QAC1CiB,OAAO,CAACU,CAAC,CAAC,GAAGhD,KAAK;MACnB;MACA8C,KAAK,CAACR,OAAO,GAAGA,OAAO;MACvBJ,MAAM,CAACK,CAAC,CAAC,GAAGO,KAAK;IAClB;IAAC;IACD,OAAOZ,MAAM;EACd;EAGA,OAAOU,gBAAgBA,CAACU,KAAa,EAAEC,GAAW,EAAEC,KAAa,EAAEf,SAA4B,EAAmB;IACjH,QAAQA,SAAS;MAChB,KAAK/B,wDAAqB;QACzB,OAAO,CAAC,IAAIc,aAAa,CAAC8B,KAAK,EAAEA,KAAK,GAAGE,KAAK,CAAC,CAAC;MACjD,KAAK9C,2DAAwB;QAC5B,OAAO,CAAC,IAAIc,aAAa,CAAC+B,GAAG,GAAGC,KAAK,EAAED,GAAG,CAAC,CAAC;MAC7C,KAAK7C,2DAAwB;QAC5B,MAAMkD,MAAM,GAAG,CAACL,GAAG,GAAGD,KAAK,GAAGE,KAAK,IAAI,CAAC;QACxC,OAAO,CAAC,IAAIhC,aAAa,CAAC8B,KAAK,GAAGM,MAAM,EAAEL,GAAG,GAAGK,MAAM,CAAC,CAAC;MACzD,KAAKlD,0DAAuB;QAC3B,OAAO,CAAC,IAAIc,aAAa,CAAC8B,KAAK,EAAEA,KAAK,GAAGE,KAAK,GAAG,CAAC,CAAC,EAAE,IAAIhC,aAAa,CAAC+B,GAAG,GAAGC,KAAK,GAAG,CAAC,EAAED,GAAG,CAAC,CAAC;IAAA;EAEhG;EAEAzC,KAAKA,CAAA,EAAc;IAClB,MAAMmB,IAAI,GAAG,IAAI;IACjB,MAAM6B,OAAO,GAAG,IAAIlC,SAAS,EAAE;IAC/B;IACAkC,OAAO,CAAC5B,MAAM,GAAGD,IAAI,CAACC,MAAM,CAAC3C,GAAG,CAAEuD,KAAK,IAAK;MAC3C,MAAMiB,QAAQ,GAAG,IAAIxC,KAAK,CAACuB,KAAK,CAAChF,EAAE,EAAEgF,KAAK,CAACjC,IAAI,EAAEiC,KAAK,CAACxB,KAAK,CAAC;MAC7D,OAAOyC,QAAQ;IAChB,CAAC,CAAC;IACF;IACAD,OAAO,CAAC5B,MAAM,CAAC8B,OAAO,CAAC,CAAClB,KAAK,EAAEmB,UAAU,KAAK;MAC7CnB,KAAK,CAACR,OAAO,GAAGL,IAAI,CAACC,MAAM,CAAC+B,UAAU,CAAC,CAAC3B,OAAO,CAAC/C,GAAG,CAAC,CAACS,KAAK,EAAEkE,UAAU,KAAK;QAC1E,IAAIlE,KAAK,KAAK,IAAI,EAAE;UACnB,OAAO,IAAI;QACZ;QACA,MAAMmE,QAAQ,GAAGnE,KAAK,CAACc,KAAK,EAAE;QAC9B,MAAMO,MAAM,GAAGO,SAAS,CAACwB,SAAS,CAACc,UAAU,EAAED,UAAU,EAAEH,OAAO,CAAC5B,MAAM,CAAC;QAC1EiC,QAAQ,CAAC9C,MAAM,GAAGA,MAAM;QACxBO,SAAS,CAACyB,mBAAmB,CAACa,UAAU,EAAEC,QAAQ,EAAE9C,MAAM,CAAC;QAC3D,OAAO8C,QAAQ;MAChB,CAAC,CAAC;IACH,CAAC,CAAC;IACF,OAAOL,OAAO;EACf;EAEA,OAAOM,mBAAmBA,CAACC,OAAwB,EAAa;IAC/D,MAAMpC,IAAI,GAAG,IAAIL,SAAS,EAAE;IAC5BK,IAAI,CAACC,MAAM,GAAGmC,OAAO,CAACnC,MAAM,CAAC3C,GAAG,CAAEuD,KAAK,IAAK;MAC3C,MAAMiB,QAAQ,GAAG,IAAIxC,KAAK,CAACuB,KAAK,CAAChF,EAAE,EAAEgF,KAAK,CAACjC,IAAI,EAAEiC,KAAK,CAACxB,KAAK,CAAC;MAC7D,OAAOyC,QAAQ;IAChB,CAAC,CAAC;IACF;IACA9B,IAAI,CAACC,MAAM,CAAC8B,OAAO,CAAC,CAAClB,KAAK,EAAEmB,UAAU,KAAK;MAC1CnB,KAAK,CAACR,OAAO,GAAG+B,OAAO,CAACnC,MAAM,CAAC+B,UAAU,CAAC,CAAC3B,OAAO,CAAC/C,GAAG,CAAC,CAACS,KAAK,EAAEkE,UAAU,KAAK;QAC7E,IAAIlE,KAAK,KAAK,IAAI,EAAE;UACnB,OAAO,IAAI;QACZ;QACA,MAAMmE,QAAQ,GAAG,IAAIpD,SAAS,CAAC,IAAI,EAAEkD,UAAU,CAAC;QAChDE,QAAQ,CAACnD,KAAK,GAAGhB,KAAK,CAACgB,KAAK,GAAG,IAAIJ,IAAI,CAACZ,KAAK,CAACgB,KAAK,CAACH,IAAI,CAAC,GAAG,IAAI;QAChEsD,QAAQ,CAAClD,KAAK,GAAGjB,KAAK,CAACiB,KAAK,GAAG,IAAIL,IAAI,CAACZ,KAAK,CAACiB,KAAK,CAACJ,IAAI,CAAC,GAAG,IAAI;QAChEsD,QAAQ,CAACjD,MAAM,GAAGlB,KAAK,CAACkB,MAAM,GAAG,IAAIN,IAAI,CAACZ,KAAK,CAACkB,MAAM,CAACL,IAAI,CAAC,GAAG,IAAI;QACnE,MAAMQ,MAAM,GAAG,IAAI,CAAC+B,SAAS,CAACc,UAAU,EAAED,UAAU,EAAEhC,IAAI,CAACC,MAAM,CAAC;QAClE,IAAIb,MAAM,EAAE;UACX8C,QAAQ,CAAC9C,MAAM,GAAGA,MAAM;UACxB,IAAI,CAACgC,mBAAmB,CAACa,UAAU,EAAEC,QAAQ,EAAE9C,MAAM,CAAC;QACvD;QACA,OAAO8C,QAAQ;MAChB,CAAC,CAAC;IACH,CAAC,CAAC;IACF,OAAOlC,IAAI;EACZ;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAOmB,SAASA,CAACc,UAAkB,EAAED,UAAkB,EAAE/B,MAAe,EAAoB;IAC3F,IAAI+B,UAAU,KAAK,CAAC,EAAE;MACrB,OAAO,IAAI;IACZ;IACA,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,GAAG,CAAC,CAAC;IAC9C,OAAOhC,MAAM,CAAC+B,UAAU,GAAG,CAAC,CAAC,CAAC3B,OAAO,CAACgC,WAAW,CAAC;EACnD;EAEA,OAAOjB,mBAAmBA,CAACa,UAAkB,EAAElE,KAAgB,EAAEqB,MAAwB,EAAE;IAC1F,IAAIA,MAAM,KAAK,IAAI,EAAE;MACpB;IACD;IACA,IAAI6C,UAAU,GAAG,CAAC,KAAK,CAAC,EAAE;MACzB7C,MAAM,CAACF,IAAI,GAAGnB,KAAK;IACpB,CAAC,MAAM;MACNqB,MAAM,CAACD,KAAK,GAAGpB,KAAK;IACrB;EACD;AACD;AAQA,MAAMyE,QAAQ,GAAIC,KAAoB,IAAK;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvE,+CAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwE,UAAU,EAAEC,aAAa,CAAC,GAAGzE,+CAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM;IACL0E,IAAI;IACJC;EACD,CAAC,GAAGN,KAAK;EAGT,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC/B,IAAI,CAACH,IAAI,IAAIF,UAAU,KAAK,EAAE,IAAIE,IAAI,IAAIF,UAAU,KAAKE,IAAI,CAAClE,IAAI,EAAE;MACnEmE,UAAU,CAACH,UAAU,CAAC;IACvB;IACAD,UAAU,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,OACCO,iEAAA;IAAKC,SAAS,EAAEV,KAAK,CAACU,SAAU;IAACC,OAAO,EAAEA,CAAA,KAAMT,UAAU,CAAC,IAAI;EAAE,GAC/DD,OAAO,GACPQ,iEAAA;IACCC,SAAS,EAAC,sBAAsB;IAChCE,SAAS;IACTC,OAAO,EAAGL,CAAC,IAAKA,CAAC,CAACM,MAAM,CAACC,MAAM,EAAG;IAClCC,IAAI,EAAC,MAAM;IACXlG,KAAK,EAAEqF,UAAW;IAClBc,QAAQ,EAAGT,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACM,MAAM,CAAChG,KAAK,CAAE;IAC/CoG,MAAM,EAAEX,gBAAiB;IACzBY,OAAO,EAAGX,CAAC,IAAK;MACf,IAAIA,CAAC,CAACpF,GAAG,KAAK,OAAO,EAAE;QACtBmF,gBAAgB,CAACC,CAAC,CAAC;MACpB;IACD;EAAE,EACD,GAEFC,iEAAA;IAAMC,SAAS,EAAC;EAAgB,GAAEL,IAAI,GAAGA,IAAI,CAAClE,IAAI,GAAG,EAAE,CAAQ,CAE3D;AAER,CAAC;AAED,MAAMiF,QAAQ,GAAIpB,KAAK,IAAK;EAC3B,MAAM1E,KAAuB,GAAG0E,KAAK,CAAC1E,KAAK;EAC3C,MAAM+F,SAAoB,GAAGrB,KAAK,CAACqB,SAAS;EAC5C,MAAMC,MAAc,GAAGtB,KAAK,CAACsB,MAAM;EACnC,MAAMC,OAAe,GAAGvB,KAAK,CAACuB,OAAO;EACrC;EACA,MAAMjB,UAAU,GAAGN,KAAK,CAACM,UAAU;;EAEnC;EACA;EACA;EACA;;EAEA,IAAIhF,KAAK,KAAK,IAAI,EAAE;IACnB,OACCmF,iEAAA;MAAKC,SAAS,EAAC,sBAAsB;MAACc,KAAK,EAAE;QAAEF,MAAM,EAAEA,MAAM,GAAGC;MAAQ;IAAE,EAAG;EAE/E;EAGA,IAAIb,SAAiB;EAErB,IAAIW,SAAS,KAAKpF,SAAS,CAACwF,OAAO,IAAIJ,SAAS,KAAKpF,SAAS,CAACyF,UAAU,EAAE;IAC1E;IACAhB,SAAS,GAAG,qBAAqB;EAClC,CAAC,MAAM;IACN;IACAA,SAAS,GAAG,sBAAsB;EACnC;EAEA,MAAMiB,UAAU,GAAGrG,KAAK,CAACmB,IAAI,KAAK,IAAI;EACtC,MAAMmF,UAAU,GAAGtG,KAAK,CAACoB,KAAK,KAAK,IAAI;EAEvC,IAAIiF,UAAU,IAAIC,UAAU,EAAE;IAC7B;IACAlB,SAAS,IAAI,QAAQ;EACtB,CAAC,MAAM,IAAIiB,UAAU,EAAE;IACtB;IACAjB,SAAS,IAAI,cAAc;EAC5B,CAAC,MAAM,IAAIkB,UAAU,EAAE;IACtB;IACAlB,SAAS,IAAI,cAAc;EAC5B;;EAEA;EACA;EACA,OACCD,iEAAA;IAAKC,SAAS,EAAEA,SAAU;IAACc,KAAK,EAAE;MAAEF,MAAM,EAAEA,MAAM;MAAEO,YAAY,EAAEN;IAAQ;EAAE,GAC3Ed,iEAAA,CAACV,QAAQ;IAACW,SAAS,EAAC,YAAY;IAACL,IAAI,EAAE/E,KAAK,CAACgB,KAAM;IAACgE,UAAU,EAAGnE,IAAY,IAAKmE,UAAU,CAAC,IAAI,EAAEnE,IAAI;EAAE,EAAG,EAC5GsE,iEAAA,CAACV,QAAQ;IAACW,SAAS,EAAC,YAAY;IAACL,IAAI,EAAE/E,KAAK,CAACiB,KAAM;IAAC+D,UAAU,EAAGnE,IAAY,IAAKmE,UAAU,CAAC,KAAK,EAAEnE,IAAI;EAAE,EAAG,CACxG;AAER,CAAC;AAED,MAAM2F,MAAM,GAAG3G,IAAA,IAAoB;EAAA,IAAnB;IAAE4G,IAAI,GAAG;EAAI,CAAC,GAAA5G,IAAA;EAC7B,OACCsF,iEAAA;IAAKe,KAAK,EAAE;MAAEQ,QAAQ,EAAED;IAAK;EAAE,EAAG;AAEpC,CAAC;AAOD,MAAME,WAAW,GAAIjC,KAAuB,IAAK;EAChD,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxG,+CAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACyG,UAAU,EAAEC,aAAa,CAAC,GAAG1G,+CAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IACLyC,KAAK;IACLkE;EACD,CAAC,GAAGtC,KAAK;EAET,MAAMuC,OAAO,GAAGD,eAAe,KAAKxI,SAAS;EAE7C8B,gDAAS,CAAC,MAAM;IACfyG,aAAa,CAACrC,KAAK,CAAC5B,KAAK,CAACjC,IAAI,CAAC;EAChC,CAAC,EAAE,CAAC6D,KAAK,CAAC5B,KAAK,CAACjC,IAAI,CAAC,CAAC;EAEtB,MAAMqG,YAAY,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACD,OAAO,EAAE;MACb;IACD;IACAJ,gBAAgB,CAAC,IAAI,CAAC;IACtBE,aAAa,CAACjE,KAAK,CAACjC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMsG,WAAW,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACF,OAAO,EAAE;MACb;IACD;IACAJ,gBAAgB,CAAC,KAAK,CAAC;IACvBG,eAAe,CAACtC,KAAK,CAAC5B,KAAK,CAAChF,EAAE,EAAEgJ,UAAU,CAAC;EAC5C,CAAC;EAED,OACC3B,iEAAA;IAAKC,SAAS,EAAC;EAAoB,GACjCwB,aAAa,GAAGzB,iEAAA,CAAC1E,+DAAY;IAACiF,IAAI,EAAC,MAAM;IACzClG,KAAK,EAAEsH,UAAW;IAClBxB,SAAS;IACTC,OAAO,EAAGL,CAAC,IAAKA,CAAC,CAACM,MAAM,CAACC,MAAM,EAAG;IAClCG,MAAM,EAAEA,CAAA,KAAMuB,WAAW,EAAG;IAC5BxB,QAAQ,EAAGT,CAAC,IAAK6B,aAAa,CAAC7B,CAAC,CAACM,MAAM,CAAChG,KAAK,CAAE;IAC/CqG,OAAO,EAAGX,CAAC,IAAK;MACf,IAAIA,CAAC,CAACpF,GAAG,KAAK,OAAO,EAAE;QACtBqH,WAAW,EAAE;MACd;IACD;EAAE,EACD,GAEDhC,iEAAA;IAAME,OAAO,EAAE6B;EAAa,GAAEpE,KAAK,CAACjC,IAAI,CAAQ,CAE5C;AAER,CAAC;AAED,MAAMwG,UAAU,GAAI3C,KAAK,IAAK;EAC7B,MAAM5B,KAAY,GAAG4B,KAAK,CAAC5B,KAAK;EAChC,MAAMkE,eAAe,GAAGtC,KAAK,CAACsC,eAAe;EAC7C,OACC7B,iEAAA;IAAKC,SAAS,EAAC;EAAY,GAC1BD,iEAAA,CAACwB,WAAW;IAAC7D,KAAK,EAAEA,KAAM;IAACkE,eAAe,EAAEA;EAAgB,EAAG,EAC/D7B,iEAAA;IAAKC,SAAS,EAAC;EAAkB,GAChCD,iEAAA,CAACqB,MAAM;IAACC,IAAI,EAAC;EAAG,EAAG,EACnBtB,iEAAA;IAAKC,SAAS,EAAC;EAAkB,GAChCD,iEAAA,CAACV,QAAQ;IAACW,SAAS,EAAC;EAAY,EAAG,EACnCD,iEAAA,CAACV,QAAQ;IAACW,SAAS,EAAC;EAAY,EAAG,CAC9B,EACND,iEAAA,CAACqB,MAAM;IAACC,IAAI,EAAC;EAAG,EAAG,CACd,CACD;AAER,CAAC;AAYD,MAAMa,WAAW,GAAI5C,KAAuB,IAAK;EAChD,MAAM;IACL5B,KAAK;IACLR,OAAO;IACPyD,SAAS;IACTwB,aAAa;IACbC,WAAW;IACXR,eAAe;IACfhC;EACD,CAAC,GAAGN,KAAK;EACT;EACA,MAAMuC,OAAO,GAAGjC,UAAU,KAAKxG,SAAS,IAAIwI,eAAe,KAAKxI,SAAS;EAIzE,MAAMiJ,YAAY,GAAGA,CAAA,KAAM;IAC1B,MAAMC,UAAU,GAAGpF,OAAO,CAAC/C,GAAG,CAAC,CAACS,KAAK,EAAEuC,CAAC,KAAK;MAC5C,MAAM2B,UAAU,GAAG6B,SAAS,KAAKpF,SAAS,CAACwF,OAAO,IAAIJ,SAAS,KAAKpF,SAAS,CAACyF,UAAU,GAAG7D,CAAC,GAAGA,CAAC,GAAGD,OAAO,CAAC/D,MAAM;MACjH,OACC4G,iEAAA,CAACW,QAAQ;QACR9F,KAAK,EAAEA,KAAM;QACb+F,SAAS,EAAEA,SAAU;QACrBC,MAAM,EAAEwB,WAAY;QACpBvB,OAAO,EAAE1D,CAAC,GAAG,CAAC,GAAGD,OAAO,CAAC/D,MAAM,GAAGiJ,WAAW,GAAG,CAAE,CAAC;QAAA;QACnDxC,UAAU,EAAEiC,OAAO,GAAG,CAAC9F,IAAa,EAAEN,IAAY,KAAKmE,UAAU,CAAClC,KAAK,CAAChF,EAAE,EAAEoG,UAAU,EAAE/C,IAAI,EAAEN,IAAI,CAAC,GAAGrC;MAAU,EAC/G;IAEJ,CAAC,CAAC;IACF,OAAOkJ,UAAU;EAElB,CAAC;EACD,OACCvC,iEAAA;IAAKC,SAAS,EAAC;EAAY,GAC1BD,iEAAA,CAACwB,WAAW;IAAC7D,KAAK,EAAEA,KAAM;IAACkE,eAAe,EAAEC,OAAO,GAAGD,eAAe,GAAGxI;EAAU,EAAG,EACrF2G,iEAAA;IAAKC,SAAS,EAAC;EAAkB,GAC/BqC,YAAY,EAAE,CACV,CACD;AAER,CAAC;AAED,MAAME,iBAAiB,GAAIjD,KAAK,IAAK;EACpC,MAAM;IACL5C,SAAS;IACT8F;EACD,CAAC,GAAGlD,KAAK;EAET,MAAMmD,SAAS,GAAG,CAAC;EACnB,MAAMC,SAAS,GAAG,CAAC;EAEnB,MAAMC,OAAO,GAAG1I,KAAK,CAAC2I,IAAI,CAAC3I,KAAK,CAACyI,SAAS,GAAGD,SAAS,GAAG,CAAC,CAAC,CAACI,IAAI,EAAE,CAAC,CAAC1I,GAAG,CAAEgD,CAAC,IAAK;IAC9E,OACC4C,iEAAA;MAAQ3F,KAAK,EAAE+C,CAAC,GAAGsF;IAAU,GAAEtF,CAAC,GAAGsF,SAAS,CAAU;EAExD,CAAC,CAAC;EAEF,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC/B,MAAMC,GAAG,GAAGD,KAAK,CAAC3C,MAAM,CAAChG,KAAK;IAC9BoI,YAAY,CAACS,QAAQ,CAACD,GAAG,CAAC,CAAC;EAC5B,CAAC;EAED,OACCjD,iEAAA;IAAKC,SAAS,EAAC;EAAmB,GACjCD,iEAAA,gBAAO,mBAEP,CAAQ,EACRA,iEAAA;IAAQ3F,KAAK,EAAEsC,SAAU;IAAC6D,QAAQ,EAAEuC;EAAa,GAC/CH,OAAO,CACA,CACJ;AAER,CAAC;AAED,MAAMO,oBAAoB,GAAI5D,KAAK,IAAK;EACvC,MAAM;IACL3C,YAAY;IACZwG,eAAe;IACfC;EACD,CAAC,GAAG9D,KAAK;EAET,MAAM+D,YAAY,GAAG,CAAC;;EAEtB;EACA,IAAIV,OAAO,GAAG,CACb5C,iEAAA;IAAQ3F,KAAK,EAAE;EAAE,GAAC,GAAC,CAAS,CAC5B;EACDuI,OAAO,GAAG,CAAC,GAAGA,OAAO,EAAE,GAAG1I,KAAK,CAAC2I,IAAI,CAAC3I,KAAK,CAACmJ,YAAY,GAAG,CAAC,CAAC,CAACP,IAAI,EAAE,CAAC,CAACS,OAAO,EAAE,CAACnJ,GAAG,CAAEgD,CAAC,IAAK;IACzF,OACC4C,iEAAA;MAAQ3F,KAAK,EAAE,CAAC+C,CAAC,GAAG,CAAC,IAAI;IAAE,GAAE,CAACA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAU;EAEpD,CAAC,CAAC,CAAC;EAEH,MAAM2F,YAAY,GAAIC,KAAK,IAAK;IAC/B,MAAMC,GAAG,GAAGD,KAAK,CAAC3C,MAAM,CAAChG,KAAK;IAC9B+I,eAAe,CAACF,QAAQ,CAACD,GAAG,CAAC,CAAC;EAC/B,CAAC;EAED,OACCjD,iEAAA;IAAKC,SAAS,EAAC;EAAmB,GACjCD,iEAAA,gBAAO,iBAEP,CAAQ,EACRA,iEAAA;IAAQ3F,KAAK,EAAEuC,YAAa;IAAC4D,QAAQ,EAAEuC;EAAa,GAClDH,OAAO,CACA,CACJ;AAER,CAAC;AAQD,MAAMY,yBAAyB,GAAIjE,KAAqC,IAAK;EAC5E,MAAM;IACL1C,iBAAiB;IACjB4G,oBAAoB;IACpBC;EACD,CAAC,GAAGnE,KAAK;EAET,MAAMqD,OAAO,GAAG,CACf5C,iEAAA;IAAQ3F,KAAK,EAAEkB,2DAAwBgD;EAAC,GAAC,QAAM,CAAS,EACxDyB,iEAAA;IAAQ3F,KAAK,EAAEkB,wDAAqB+C;EAAC,GAAC,KAAG,CAAS,EAClD0B,iEAAA;IAAQ3F,KAAK,EAAEkB,0DAAuBmD;EAAC,GAAC,OAAK,CAAS,EACtDsB,iEAAA;IAAQ3F,KAAK,EAAEkB,2DAAwBiD;EAAC,GAAC,UAAQ,CAAS,CAC1D;EAED,MAAMuE,YAAY,GAAIC,KAAK,IAAK;IAC/B,MAAMC,GAAG,GAAGD,KAAK,CAAC3C,MAAM,CAAChG,KAAK;IAC9BoJ,oBAAoB,CAACP,QAAQ,CAACD,GAAG,CAAC,CAAC;EACpC,CAAC;EAED,OACCjD,iEAAA;IAAKC,SAAS,EAAC;EAAmB,GACjCD,iEAAA,gBAAO,qBAEP,CAAQ,EACRA,iEAAA;IAAQ3F,KAAK,EAAEwC,iBAAkB;IAAC2D,QAAQ,EAAEuC,YAAa;IAACW,QAAQ,EAAEA;EAAS,GAC3Ed,OAAO,CACA,CACJ;AAER,CAAC;AAED,MAAMe,YAAY,GAAIpE,KAAK,IAAK;EAC/B,MAAM;IACLqE,KAAK;IACLC;EACD,CAAC,GAAGtE,KAAK;EACT,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvE,+CAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwE,UAAU,EAAEC,aAAa,CAAC,GAAGzE,+CAAQ,CAAC0I,KAAK,CAAC;EAEnD,MAAME,iBAAiB,GAAId,KAAK,IAAK;IACpCa,QAAQ,CAACnE,UAAU,CAAC;IACpBD,UAAU,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,OACCO,iEAAA;IAAKC,SAAS,EAAC,oBAAoB;IAACC,OAAO,EAAEA,CAAA,KAAMT,UAAU,CAAC,IAAI;EAAE,GAClED,OAAO,GACPQ,iEAAA;IACCC,SAAS,EAAC,0BAA0B;IACpCE,SAAS;IACTC,OAAO,EAAGL,CAAC,IAAKA,CAAC,CAACM,MAAM,CAACC,MAAM,EAAG;IAClCC,IAAI,EAAC,MAAM;IACXlG,KAAK,EAAEqF,UAAW;IAClBc,QAAQ,EAAGT,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACM,MAAM,CAAChG,KAAK,CAAE;IAC/CoG,MAAM,EAAEqD,iBAAkB;IAC1BpD,OAAO,EAAGX,CAAC,IAAK;MACf,IAAIA,CAAC,CAACpF,GAAG,KAAK,OAAO,EAAE;QACtBmJ,iBAAiB,CAAC/D,CAAC,CAAC;MACrB;IACD;EAAE,EACD,GAEFC,iEAAA;IAAMC,SAAS,EAAC;EAAyB,GAAE2D,KAAK,CAAQ,CAEpD;AAER,CAAC;AAQD,MAAMG,OAAO,GAAIxE,KAAmB,IAAK;EACxC;EACA;EACA,MAAM;IACLyE,SAAS;IACTC;EACD,CAAC,GAAG1E,KAAK;EAET,MAAMxC,MAAM,GAAGiH,SAAS,CAACjH,MAAM;EAC/B,MAAM+E,OAAO,GAAGmC,YAAY,KAAK5K,SAAS;EAG1C,MAAMwI,eAAe,GAAGA,CAACqC,OAAe,EAAExI,IAAY,KAAK;IAC1D,IAAI,CAACoG,OAAO,EAAE;MACb;IACD;IACA,MAAMqC,YAAY,GAAGH,SAAS,CAACrI,KAAK,EAAE;IACtC,MAAMyI,aAAa,GAAGD,YAAY,CAACpH,MAAM,CAACsH,IAAI,CAAE1G,KAAK,IAAKA,KAAK,CAAChF,EAAE,KAAKuL,OAAO,CAAC;IAC/E,IAAIE,aAAa,EAAE;MAClBA,aAAa,CAAC1I,IAAI,GAAGA,IAAI;MACzBuI,YAAY,CAACE,YAAY,CAAC;IAC3B;EACD,CAAC;EAED,MAAMtE,UAAU,GAAGA,CAACqE,OAAe,EAAEnF,UAAkB,EAAE/C,IAAa,EAAEN,IAAY,KAAK;IACxF,IAAI,CAACoG,OAAO,EAAE;MACb;IACD;IACA,MAAMqC,YAAY,GAAGH,SAAS,CAACrI,KAAK,EAAE;IACtC,MAAMyI,aAAa,GAAGD,YAAY,CAACpH,MAAM,CAACsH,IAAI,CAAE1G,KAAK,IAAKA,KAAK,CAAChF,EAAE,KAAKuL,OAAO,CAAC;IAC/E,IAAIE,aAAa,EAAE;MAClB,MAAME,aAAa,GAAGF,aAAa,CAACjH,OAAO,CAAC4B,UAAU,CAAC;MACvD,IAAIuF,aAAa,EAAE;QAClB,IAAItI,IAAI,EAAE;UACT,MAAM4D,IAAI,GAAG0E,aAAa,CAACzI,KAAK;UAChC,IAAI+D,IAAI,EAAE;YACTA,IAAI,CAAClE,IAAI,GAAGA,IAAI;UACjB,CAAC,MAAM;YACN4I,aAAa,CAACzI,KAAK,GAAG,IAAIJ,IAAI,CAACC,IAAI,CAAC;UACrC;QACD,CAAC,MAAM;UACN,MAAMkE,IAAI,GAAG0E,aAAa,CAACxI,KAAK;UAChC,IAAI8D,IAAI,EAAE;YACTA,IAAI,CAAClE,IAAI,GAAGA,IAAI;UACjB,CAAC,MAAM;YACN4I,aAAa,CAACxI,KAAK,GAAG,IAAIL,IAAI,CAACC,IAAI,CAAC;UACrC;QACD;MACD;MACAuI,YAAY,CAACE,YAAY,CAAC;IAC3B;EACD,CAAC;EAED,MAAMI,YAAY,GAAG,GAAG;;EAExB;EACA;EACA,MAAMC,qBAAqB,GAAGD,YAAY,GAAG,CAAC,KAAKxH,MAAM,CAAC3D,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;;EAEzE;AACD;AACA;EACC,MAAMqL,YAAY,GAAI1H,MAAe,IAAK;IACzC;IACA;IACA,MAAMqF,aAAa,GAAG,CAAC;IAEvB,OAAO,CACN,GAAGrF,MAAM,CAAC2H,KAAK,CAAC,CAAC,CAAC,CAACnB,OAAO,EAAE,CAACnJ,GAAG,CAAC,CAACuD,KAAK,EAAEgH,GAAG,KAAK;MAChD;MACA,MAAMC,UAAU,GAAGjH,KAAK,CAACR,OAAO,CAACuH,KAAK,CAAC,CAAC,EAAE/G,KAAK,CAACR,OAAO,CAAC/D,MAAM,GAAG,CAAC,CAAC;MAEnE,OAAO4G,iEAAA,CAACmC,WAAW;QAClBhF,OAAO,EAAEyH,UAAW;QACpBjH,KAAK,EAAEA,KAAM;QAACiD,SAAS,EAAEpF,SAAS,CAACwF,OAAQ;QAC3CoB,aAAa,EAAEA,aAAc;QAC7BC,WAAW,EAAE,CAAC,IAAIsC,GAAG,GAAGH,qBAAsB;QAC9C3C,eAAe,EAAEC,OAAO,GAAGD,eAAe,GAAGxI,SAAU;QACvDwG,UAAU,EAAEiC,OAAO,GAAGjC,UAAU,GAAGxG;MAAU,EAC5C;IACH,CAAC,CAAC;IACF;IACA2G,iEAAA,CAACkC,UAAU;MAACvE,KAAK,EAAEZ,MAAM,CAAC,CAAC,CAAE;MAAC8E,eAAe,EAAEA;IAAgB,EAAG,EAClE,GAAG9E,MAAM,CAAC2H,KAAK,CAAC,CAAC,CAAC,CAACtK,GAAG,CAAC,CAACuD,KAAK,EAAEgH,GAAG,EAAEE,GAAG,KAAK;MAC3C;MACA,MAAMD,UAAU,GAAGjH,KAAK,CAACR,OAAO,CAACuH,KAAK,CAAC/G,KAAK,CAACR,OAAO,CAAC/D,MAAM,GAAG,CAAC,CAAC;MAEhE,OAAO4G,iEAAA,CAACmC,WAAW;QAACxE,KAAK,EAAEA,KAAM;QAChCR,OAAO,EAAEyH,UAAW;QACpBhE,SAAS,EAAEpF,SAAS,CAACsJ,QAAS;QAC9B1C,aAAa,EAAEA,aAAc;QAC7BC,WAAW,EAAE,CAAC,KAAKwC,GAAG,CAACzL,MAAM,GAAG,CAAC,GAAGuL,GAAG,CAAC,GAAGH,qBAAsB;QACjE3C,eAAe,EAAEC,OAAO,GAAGD,eAAe,GAAGxI,SAAU;QACvDwG,UAAU,EAAEiC,OAAO,GAAGjC,UAAU,GAAGxG;MAAU,EAC5C;IACH,CAAC,CAAC,CACF;EACF,CAAC;EAED,OACC2G,iEAAA;IAAKC,SAAS,EAAC;EAAc,GAC3BlD,MAAM,CAAC3D,MAAM,GAAG,CAAC,IAAIqL,YAAY,CAAC1H,MAAM,CAAC,CACrC;AAER,CAAC;AAEM,IAAKgI,gBAAgB,0BAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA;AAM5B,MAAMC,gBAAgB,GAAIzF,KAAK,IAAK;EACnC,MAAM;IACL0F,IAAI;IACJC,WAAW;IACXC;EACD,CAAC,GAAG5F,KAAK;EACT,MAAM,CAACyE,SAAS,EAAEC,YAAY,CAAC,GAAG/I,+CAAQ,CAAmB,IAAI,CAAC;EAElEC,gDAAS,CAAC,MAAM;IACfH,kEAAqB,CAACmK,SAAS,CAAC,CAC9BC,IAAI,CAAElG,OAAO,IAAK;MAClB+E,YAAY,CAACxH,SAAS,CAACwC,mBAAmB,CAACC,OAAO,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACiG,SAAS,CAAC,CAAC;EAEf,OACCnF,iEAAA,CAAC3E,uDAAK;IAAC4E,SAAS,EAAC,oBAAoB;IAACgF,IAAI,EAAEA,IAAK;IAACI,MAAM,EAAEH,WAAY;IAACI,IAAI,EAAC,IAAI;IAACC,QAAQ,EAAE;EAAK,GAC/FvF,iEAAA,CAAC3E,8DAAY;IAAC4E,SAAS,EAAC,4BAA4B;IAACwF,WAAW;EAAA,GAC/DzF,iEAAA,CAAC3E,6DAAW,QAAC,eAAa,EAAC8J,SAAS,CAAe,CACpC,EAChBnF,iEAAA,CAAC3E,4DAAU;IAAC4E,SAAS,EAAC;EAAM,GAC1B+D,SAAS,GAAGhE,iEAAA,CAAC+D,OAAO;IAACC,SAAS,EAAEA;EAAU,EAAG,GAAG,YAAY,CACjD,EACbhE,iEAAA,CAAC3E,8DAAY;IAAC4E,SAAS,EAAC;EAA4B,GACnDD,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC,WAAW;IAAC3F,OAAO,EAAEgF;EAAY,GAAC,OAElD,CAAS,CACK,CACR;AAEV,CAAC;AASD,MAAMY,eAAe,GAAIvG,KAA2B,IAAK;EACxD,MAAMwG,gBAAgB,GAAG,CAAC;EAC1B,MAAMC,mBAAmB,GAAG,CAAC;EAC7B,MAAMC,wBAAwB,GAAG1K,2DAAwB;EACzD,MAAM2K,kBAAkB,GAAG,aAAa;EACxC,MAAM;IACLjB,IAAI;IACJC,WAAW;IACXiB,UAAU;IACVhB;EACD,CAAC,GAAG5F,KAAK;EACT,MAAM,CAAC5C,SAAS,EAAE8F,YAAY,CAAC,GAAGvH,+CAAQ,CAAC6K,gBAAgB,CAAC;EAC5D,MAAM,CAACnJ,YAAY,EAAEwG,eAAe,CAAC,GAAGlI,+CAAQ,CAAC8K,mBAAmB,CAAC;EACrE,MAAM,CAACnJ,iBAAiB,EAAE4G,oBAAoB,CAAC,GAAGvI,+CAAQ,CAAC+K,wBAAwB,CAAC;EACpF,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGnL,+CAAQ,CAACgL,kBAAkB,CAAC;EAClE,MAAM,CAAClC,SAAS,EAAEC,YAAY,CAAC,GAAG/I,+CAAQ,CAAYuB,SAAS,CAACC,WAAW,CAACqJ,gBAAgB,EAAEC,mBAAmB,EAAEC,wBAAwB,CAAC,CAAC;EAC7I;EACA,MAAM5C,YAAY,GAAG,CAAC,KAAK1G,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC;EAE7CxB,gDAAS,CAAC,MAAM;IACfmL,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEpB,SAAS,CAAC;IACnC,IAAIA,SAAS,EAAE;MACdnK,kEAAqB,CAACmK,SAAS,CAAC,CAC9BC,IAAI,CAAElG,OAAO,IAAK;QAClBuD,YAAY,CAACvD,OAAO,CAACvC,SAAS,CAAC;QAC/ByG,eAAe,CAAClE,OAAO,CAACtC,YAAY,CAAC;QACrC,IAAIsC,OAAO,CAACrC,iBAAiB,EAAE;UAC9B4G,oBAAoB,CAACvE,OAAO,CAACrC,iBAAiB,CAAC;QAChD;QACAwJ,cAAc,CAAE,GAAEnH,OAAO,CAACxD,IAAK,SAAQ,CAAC;QACxCuI,YAAY,CAACxH,SAAS,CAACwC,mBAAmB,CAACC,OAAO,CAAC,CAAC;MACrD,CAAC,CAAC;IACJ,CAAC,MACI;MACJsH,gBAAgB,CAACT,gBAAgB,EAAEC,mBAAmB,EAAEC,wBAAwB,CAAC;IAClF;EACD,CAAC,EAAE,CAACd,SAAS,CAAC,CAAC;EAEf,MAAMsB,eAAe,GAAIxD,GAAW,IAAK;IACxCR,YAAY,CAACQ,GAAG,CAAC;IACjBuD,gBAAgB,CAACvD,GAAG,EAAErG,YAAY,EAAEC,iBAAiB,CAAC;EACvD,CAAC;EAED,MAAM6J,kBAAkB,GAAIzD,GAAW,IAAK;IAC3CG,eAAe,CAACH,GAAG,CAAC;IACpBuD,gBAAgB,CAAC7J,SAAS,EAAEsG,GAAG,EAAEpG,iBAAiB,CAAC;EACpD,CAAC;EAED,MAAM8J,uBAAuB,GAAIrJ,SAA4B,IAAK;IACjEmG,oBAAoB,CAACnG,SAAS,CAAC;IAC/BkJ,gBAAgB,CAAC7J,SAAS,EAAEC,YAAY,EAAEU,SAAS,CAAC;EACrD,CAAC;EAED,MAAMkJ,gBAAgB,GAAGA,CACxBI,gBAAwB,EACxBC,mBAA2B,EAC3BC,wBAA2C,KACvC;IACJ7C,YAAY,CAACxH,SAAS,CAACC,WAAW,CAACkK,gBAAgB,EAAEC,mBAAmB,EAAEC,wBAAwB,CAAC,CAAC;EACrG,CAAC;EAGD,OACC9G,iEAAA,CAAC3E,uDAAK;IAAC4E,SAAS,EAAC,oBAAoB;IAACgF,IAAI,EAAEA,IAAK;IAACI,MAAM,EAAEH,WAAY;IAACI,IAAI,EAAC,IAAI;IAACC,QAAQ,EAAE;EAAK,GAC/FvF,iEAAA,CAAC3E,8DAAY;IAAC4E,SAAS,EAAC,4BAA4B;IAACwF,WAAW;EAAA,GAC/DzF,iEAAA,CAAC3E,6DAAW,QAAC2E,iEAAA,CAAC2D,YAAY;IAACC,KAAK,EAAEwC,WAAY;IAACvC,QAAQ,EAAEwC;EAAe,EAAG,CAAc,EACzFrG,iEAAA;IAAMC,SAAS,EAAC;EAAmB,GAClCD,iEAAA,CAACwC,iBAAiB;IACjB7F,SAAS,EAAEA,SAAU;IACrB8F,YAAY,EAAEgE;EAAgB,EAC7B,EACFzG,iEAAA,CAACmD,oBAAoB;IACpBvG,YAAY,EAAEA,YAAa;IAC3BwG,eAAe,EAAEsD,kBAAmB;IACpCrD,YAAY,EAAEA;EAAa,EAC1B,EACFrD,iEAAA,CAACwD,yBAAyB;IACzB3G,iBAAiB,EAAEA,iBAAkB;IACrC4G,oBAAoB,EAAEkD,uBAAwB;IAC9CjD,QAAQ,EAAE9G,YAAY,GAAG,CAAC,GAAG,KAAK,GAAG;EAAK,EACzC,CACI,CACQ,EAChBoD,iEAAA,CAAC3E,4DAAU;IAAC4E,SAAS,EAAC;EAAM,GAACD,iEAAA,CAAC+D,OAAO;IAACC,SAAS,EAAEA,SAAU;IAACC,YAAY,EAAEA;EAAa,EAAG,CAAa,EACvGjE,iEAAA,CAAC3E,8DAAY;IAAC4E,SAAS,EAAC;EAA4B,GACnDD,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC,WAAW;IAAC3F,OAAO,EAAEgF;EAAY,GAAC,OAElD,CAAS,EACTlF,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC,SAAS;IAAC3F,OAAO,EAAEiG;EAAW,GAAC,cAE/C,CAAS,CACK,CACR;AAEV,CAAC;AAWM,MAAMY,YAAY,GAAIxH,KAAwB,IAAK;EACzD,MAAM4F,SAAS,GAAG5F,KAAK,CAAC4F,SAAS;EAEjC,IAAIA,SAAS,EAAE;IACd,IAAI5F,KAAK,CAACyH,IAAI,KAAKjC,gBAAgB,CAACkC,GAAG,EAAE;MACxC,OAAOjH,iEAAA,CAAC8F,eAAe,EAAKvG,KAAK,CAAI;IACtC,CAAC,MAAM,IAAIA,KAAK,CAACyH,IAAI,KAAKjC,gBAAgB,CAACmC,KAAK,EAAE;MACjD,OAAOlH,iEAAA,CAACgF,gBAAgB,EAAKzF,KAAK,CAAI;IACvC,CAAC,MAAM;MACN,OAAOS,iEAAA,CAACgF,gBAAgB,EAAKzF,KAAK,CAAI;IACvC;EACD,CAAC,MAAM;IACN,OAAOS,iEAAA,CAAC8F,eAAe,EAAKvG,KAAK,CAAI;EACtC;AACD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACl5BkD;AACe;AACU;AACT;;AAEnE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA,MAAM8H,WAAuC,GAAG3M,IAAA,IAAgC;EAAA,IAA/B;IAAEuK,IAAI;IAAEI,MAAM;IAAEiC;EAAS,CAAC,GAAA5M,IAAA;EAC1E,OACCsF,iEAAA,CAAC3E,uDAAK;IAAC4J,IAAI,EAAEA,IAAK;IAACI,MAAM,EAAEA,MAAO;IAACE,QAAQ,EAAE;EAAK,GACjDvF,iEAAA,CAAC3E,8DAAY;IAACoK,WAAW;EAAA,GACxBzF,iEAAA,CAAC3E,6DAAW,QAAC,gBAAc,CAAc,CAC3B,EACf2E,iEAAA,CAAC3E,4DAAU,QACV2E,iEAAA,YAAG,mHAEH,CAAI,CACQ,EACbA,iEAAA,CAAC3E,8DAAY,QACZ2E,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC,WAAW;IAAC3F,OAAO,EAAEmF;EAAO,GAAC,QAE7C,CAAS,EACTrF,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC,QAAQ;IAAC3F,OAAO,EAAEoH;EAAS,GAAC,QAE5C,CAAS,CACK,CACR;AAEV,CAAC;AAUD,MAAMC,UAAqC,GAAIhI,KAAK,IAAK;EACxD,MAAM,CAACiI,eAAe,EAAEC,kBAAkB,CAAC,GAAGvM,+CAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACpC,MAAM,EAAED,SAAS,CAAC,GAAGqC,+CAAQ,CAAUqE,KAAK,CAACL,OAAO,CAACpG,MAAM,CAAC;EACnE,MAAMoG,OAAwB,GAAGK,KAAK,CAACL,OAAO;EAE9C,MAAMwI,iBAAiB,GAAGA,CAAA,KAAM;IAC/BnI,KAAK,CAACoI,sBAAsB,CAAC5C,2EAAqB,EAAE7F,OAAO,CAACvG,EAAE,CAAC;EAChE,CAAC;EAED,MAAMkP,iBAAiB,GAAI9H,CAAC,IAAK;IAChCA,CAAC,CAAC+H,eAAe,EAAE;IACnBvI,KAAK,CAACoI,sBAAsB,CAAC5C,0EAAoB,EAAE7F,OAAO,CAACvG,EAAE,CAAC;EAC/D,CAAC;EAED,MAAMoP,sBAAsB,GAAIhI,CAAC,IAAK;IACrCA,CAAC,CAAC+H,eAAe,EAAE;IACnBL,kBAAkB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMO,kBAAkB,GAAIjI,CAAC,IAAK;IACjCA,CAAC,CAAC+H,eAAe,EAAE;IACnBxB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBvL,iEAAoB,CAACkE,OAAO,CAACvG,EAAE,EAAEoH,CAAC,CAACM,MAAM,CAAC4H,OAAO,CAAC,CAAC7C,IAAI,CAAE8C,QAAQ,IAAK;MACrErP,SAAS,CAACqP,QAAQ,CAAC;IACpB,CAAC,CAAC;IACF5B,OAAO,CAACC,GAAG,CAACxG,CAAC,CAACM,MAAM,CAAC4H,OAAO,CAAC;EAC9B,CAAC;EAED,OACCjI,iEAAA,CAAAmI,wDAAA,QACCnI,iEAAA;IAAIE,OAAO,EAAEwH;EAAkB,GAC9B1H,iEAAA,aAAKd,OAAO,CAACxD,IAAI,CAAM,EACvBsE,iEAAA;IAAIC,SAAS,EAAC;EAAa,GAC1BD,iEAAA;IACCO,IAAI,EAAC,UAAU;IACf0H,OAAO,EAAEnP,MAAO;IAChBoH,OAAO,EAAE8H;EAAmB,EAC3B,CACE,EACLhI,iEAAA;IAAIC,SAAS,EAAC;EAA+B,GAC5CD,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC;EAAS,GAAE,OAAK,CAAS,EACzC7F,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC,SAAS;IAAC5F,SAAS,EAAC,MAAM;IAACC,OAAO,EAAE2H;EAAkB,GAAC,MAAI,CAAS,EACpF7H,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC,QAAQ;IAAC3F,OAAO,EAAE6H;EAAuB,GAAC,QAAM,CAAS,CACrE,CACD,EACL/H,iEAAA,CAACqH,WAAW;IACXpC,IAAI,EAAEuC,eAAgB;IACtBnC,MAAM,EAAEA,CAAA,KAAMoC,kBAAkB,CAAC,KAAK,CAAE;IACxCH,QAAQ,EAAEA,CAAA,KAAM/H,KAAK,CAAC6I,mBAAmB,CAAClJ,OAAO,CAACvG,EAAE;EAAE,EACrD,CACA;AAEL,CAAC;AASD,MAAM0P,YAAyC,GAAI9I,KAAK,IAAK;EAC5D,MAAM+I,QAA2B,GAAG/I,KAAK,CAAC+I,QAAQ;EAElD,OACCtI,iEAAA,CAACoH,uDAAK;IAACmB,KAAK;IAACtI,SAAS,EAAC;EAA+B,GACrDD,iEAAA,gBACCA,iEAAA,aACCA,iEAAA;IAAIwI,KAAK,EAAC;EAAK,GAAC,MAAI,CAAK,EACzBxI,iEAAA;IAAIwI,KAAK,EAAC,KAAK;IAACvI,SAAS,EAAC;EAAa,GAAC,WAAS,CAAK,EACtDD,iEAAA;IAAIwI,KAAK,EAAC;EAAK,EAAM,CACjB,CACE,EACRxI,iEAAA,gBACEsI,QAAQ,CAAClO,GAAG,CAAE8E,OAAO,IACrBc,iEAAA,CAACuH,UAAU,EAAAkB,0EAAA;IACV9N,GAAG,EAAEuE,OAAO,CAACvG,EAAG;IAChBuG,OAAO,EAAEA;IACT;IACA;EAAA,GACIK,KAAK,EAEV,CAAC,CACK,CACD;AAEV,CAAC;AAID,MAAMmJ,QAAQ,GAAGA,CAAA,KAAM;EACtB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1N,+CAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACoN,QAAQ,EAAEO,WAAW,CAAC,GAAG3N,+CAAQ,CAAoB,EAAE,CAAC;EAC/D,MAAM,CAAC4N,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7N,+CAAQ,CAAmB6J,2EAAqB,CAAC;EACjG,MAAM,CAACiE,eAAe,EAAEC,kBAAkB,CAAC,GAAG/N,+CAAQ,CAAgB,IAAI,CAAC;EAE3E,MAAMgO,uBAAuB,GAAGA,CAAA,KAAM;IACrCD,kBAAkB,CAAC,IAAI,CAAC;IACxBL,mBAAmB,CAAC,KAAK,CAAC;EAC3B,CAAC;EACD,MAAMO,sBAAsB,GAAGA,CAAA,KAAMP,mBAAmB,CAAC,KAAK,CAAC;EAC/D,MAAMjB,sBAAsB,GAAG,SAAAA,CAACX,IAAsB,EAAsC;IAAA,IAApC7B,SAAwB,GAAAhM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IACtF8P,kBAAkB,CAAC9D,SAAS,CAAC;IAC7B4D,mBAAmB,CAAC/B,IAAI,CAAC;IACzB4B,mBAAmB,CAAC,IAAI,CAAC;EAC1B,CAAC;EACD,MAAMR,mBAAmB,GAAIjD,SAAiB,IAAK;IAClDnK,qEAAwB,CAACmK,SAAS,CAAC,CAACC,IAAI,CAAC,MAAM;MAC9CyD,WAAW,CAACP,QAAQ,CAACc,MAAM,CAAElK,OAAO,IAAKA,OAAO,CAACvG,EAAE,KAAKwM,SAAS,CAAC,CAAC;IACpE,CAAC,CAAC;EACH,CAAC;EACD;EACA;;EAEAhK,gDAAS,CAAC,MAAM;IACfH,mEAAsB,EAAE,CAACoK,IAAI,CAAEkD,QAAQ,IAAK;MAC3ChC,OAAO,CAACC,GAAG,CAAC+B,QAAQ,CAAC;MACrBO,WAAW,CAACP,QAAQ,CAAC;IACtB,CAAC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OACCtI,iEAAA,CAACmH,uDAAS,QACTnH,iEAAA;IAAIC,SAAS,EAAC;EAAW,GAAC,0BAAwB,CAAK,EAEvDD,iEAAA,CAACqI,YAAY;IACZC,QAAQ,EAAEA,QAAS;IACnBX,sBAAsB,EAAEA,sBAAuB;IAC/CS,mBAAmB,EAAEA;EAAoB,EACxC,EACFpI,iEAAA,CAAC5E,uDAAM;IAACyK,OAAO,EAAC,MAAM;IAAC5F,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEA,CAAA,KAAMyH,sBAAsB,CAAC5C,0EAAoB;EAAE,GAAC,aAAW,CAAS,EACzH/E,iEAAA,CAAC+G,kEAAY;IACZ9B,IAAI,EAAE0D,gBAAiB;IACvB3B,IAAI,EAAE8B,gBAAiB;IACvB3D,SAAS,EAAE6D,eAAgB;IAC3B9D,WAAW,EAAEgE,uBAAwB;IACrC/C,UAAU,EAAEgD;EAAuB,EAClC,CACS;AAEd,CAAC;AAED,+DAAeT,QAAQ;;;;;;;;;;;;;;ACpMhB,IAAKnN,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA","sources":["webpack://react-bracket-builder/./src/api/bracketApi.ts","webpack://react-bracket-builder/./src/components/bracket_builder/Bracket.tsx","webpack://react-bracket-builder/./src/components/settings/Settings.tsx","webpack://react-bracket-builder/./src/enum.ts"],"sourcesContent":["import { Nullable } from \"../types\";\nimport { WildcardPlacement } from '../enum';\n\nexport interface BracketResponse {\n\tid: number;\n\tname: string;\n\tactive: boolean;\n\tnumRounds: number;\n\tnumWildcards: number;\n\twildcardPlacement: WildcardPlacement;\n\trounds: RoundResponse[];\n}\n\nexport interface RoundResponse {\n\tid: number;\n\tname: string;\n\tdepth: number;\n\tmatches: MatchResponse[];\n}\n\nexport interface MatchResponse {\n\tid: number;\n\tindex: number;\n\tteam1: Nullable<TeamResponse>;\n\tteam2: Nullable<TeamResponse>;\n\tresult: Nullable<TeamResponse>;\n}\n\nexport interface TeamResponse {\n\tid: number;\n\tname: string;\n\tseed: Nullable<number>;\n}\n\nclass BracketApi {\n\tprivate baseUrl: string;\n\tprivate bracketPath: string = 'brackets';\n\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tthis.baseUrl = wpbb_ajax_obj.rest_url;\n\t}\n\n\tasync getBrackets(): Promise<BracketResponse[]> {\n\t\tconst res = await this.performRequest(this.bracketPath, 'GET');\n\t\tif (res.status !== 200) {\n\t\t\tthrow new Error('Failed to get brackets');\n\t\t}\n\t\t// return await res.json();\n\t\treturn camelCaseKeys(await res.json());\n\t}\n\n\tasync getBracket(id: number): Promise<BracketResponse> {\n\t\tconst res = await this.performRequest(`${this.bracketPath}/${id}`, 'GET');\n\t\tif (res.status !== 200) {\n\t\t\tthrow new Error('Failed to get bracket');\n\t\t}\n\t\t// return await res.json();\n\t\treturn camelCaseKeys(await res.json());\n\t}\n\n\tasync deleteBracket(id: number): Promise<void> {\n\t\tconst res = await this.performRequest(`${this.bracketPath}/${id}`, 'DELETE');\n\t\tif (res.status !== 204) {\n\t\t\tthrow new Error('Failed to delete bracket');\n\t\t}\n\t}\n\n\tasync setActive(id: number, active: boolean): Promise<boolean> {\n\t\tconst path = `${this.bracketPath}/${id}/${active ? 'activate' : 'deactivate'}`\n\t\tconst res = await this.performRequest(path, 'POST');\n\t\tif (res.status !== 200) {\n\t\t\tthrow new Error('Failed to set active');\n\t\t}\n\t\tconst activated = await res.json();\n\t\treturn activated;\n\t}\n\n\n\tasync performRequest(path: string, method: string, body: any = {}) {\n\t\tconst request = {\n\t\t\tmethod,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t}\n\t\tif (method !== 'GET') {\n\t\t\trequest['body'] = JSON.stringify(snakeCaseKeys(body));\n\t\t}\n\n\t\treturn await fetch(`${this.baseUrl}${path}`, request);\n\t}\n\n}\n\n// Utility function to convert snake_case to camelCase\nfunction toCamelCase(str: string): string {\n\treturn str.replace(/([-_][a-z])/g, (group) =>\n\t\tgroup.toUpperCase().replace('-', '').replace('_', '')\n\t);\n}\n\n// Recursive function to convert object keys to camelCase\nfunction camelCaseKeys(obj: any): any {\n\tif (Array.isArray(obj)) {\n\t\treturn obj.map((value) => camelCaseKeys(value));\n\t} else if (typeof obj === 'object' && obj !== null) {\n\t\treturn Object.entries(obj).reduce((accumulator: any, [key, value]) => {\n\t\t\taccumulator[toCamelCase(key)] = camelCaseKeys(value);\n\t\t\treturn accumulator;\n\t\t}, {});\n\t}\n\treturn obj;\n}\n\nfunction camelCaseToSnakeCase(str: string): string {\n\treturn str.replace(/[A-Z]/g, (match) => `_${match.toLowerCase()}`);\n}\n\n// Recursive function to convert object keys to snake_case\nfunction snakeCaseKeys(obj: any): any {\n\tif (Array.isArray(obj)) {\n\t\treturn obj.map((value) => snakeCaseKeys(value));\n\t} else if (typeof obj === 'object' && obj !== null) {\n\t\treturn Object.entries(obj).reduce((accumulator: any, [key, value]) => {\n\t\t\taccumulator[camelCaseToSnakeCase(key)] = snakeCaseKeys(value);\n\t\t\treturn accumulator;\n\t\t}, {});\n\t}\n\treturn obj;\n}\n\nexport const bracketApi = new BracketApi();","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, InputGroup } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { bracketApi } from '../../api/bracketApi';\nimport { Nullable } from '../../types';\nimport { BracketResponse } from '../../api/bracketApi';\nimport { WildcardPlacement } from '../../enum';\n\n\n// Direction enum\nenum Direction {\n\tTopLeft = 0,\n\tTopRight = 1,\n\tBottomLeft = 2,\n\tBottomRight = 3,\n}\n\nclass Team {\n\tname: string;\n\t// constructor(id: number, name: string) {\n\t// \tthis.id = id;\n\t// \tthis.name = name;\n\t// }\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\tclone(): Team {\n\t\treturn new Team(this.name);\n\t}\n}\n\n\nclass MatchNode {\n\tteam1: Nullable<Team> = null;\n\tteam2: Nullable<Team> = null;\n\tresult: Nullable<Team> = null;\n\tleft: Nullable<MatchNode> = null;\n\tright: Nullable<MatchNode> = null;\n\tparent: Nullable<MatchNode> = null;\n\tdepth: number;\n\n\tconstructor(parent: Nullable<MatchNode>, depth: number) {\n\t\tthis.depth = depth;\n\t\tthis.parent = parent;\n\t}\n\n\tclone(): MatchNode {\n\t\tconst match = this;\n\t\tconst clone = new MatchNode(null, match.depth);\n\n\t\tclone.team1 = match.team1 ? match.team1.clone() : null;\n\t\tclone.team2 = match.team2 ? match.team2.clone() : null;\n\n\t\tif (match.result) {\n\t\t\tif (match.result === match.team1) {\n\t\t\t\tclone.result = clone.team1;\n\t\t\t} else if (match.result === match.team2) {\n\t\t\t\tclone.result = clone.team2;\n\t\t\t}\n\t\t}\n\n\t\treturn clone;\n\t}\n\n}\n\nclass Round {\n\tid: number;\n\tname: string;\n\tdepth: number;\n\tmatches: Array<Nullable<MatchNode>>;\n\n\tconstructor(id: number, name: string, depth: number,) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.depth = depth;\n\t\t// this.matches = [];\n\t}\n}\n\nclass WildcardRange {\n\tconstructor(public min: number, public max: number) { }\n\n\ttoString(): string {\n\t\treturn `${this.min}-${this.max}`;\n\t}\n}\n\nclass MatchTree {\n\troot: MatchNode | null\n\trounds: Round[]\n\t// numRounds: number\n\t// numWildcards: number\n\t// wildcardsPlacement: WildcardPlacement\n\n\t// constructor(numRounds: number, numWildcards: number, wildcardsPlacement: WildcardPlacement) {\n\t// \tthis.rounds = this.buildRounds(numRounds, numWildcards, wildcardsPlacement)\n\t// \tthis.numRounds = numRounds\n\t// \tthis.numWildcards = numWildcards\n\t// \tthis.wildcardsPlacement = wildcardsPlacement\n\t// }\n\tstatic fromOptions(numRounds: number, numWildcards: number, wildcardPlacement: WildcardPlacement): MatchTree {\n\t\tconst tree = new MatchTree()\n\t\ttree.rounds = this.buildRounds(numRounds, numWildcards, wildcardPlacement)\n\t\treturn tree\n\t}\n\n\tstatic buildRounds(numRounds: number, numWildcards: number, wildcardPlacement: WildcardPlacement): Round[] {\n\t\t// The number of matches in a round is equal to 2^depth unless it's the first round\n\t\t// and there are wildcards. In that case, the number of matches equals the number of wildcards\n\t\tconst rootMatch = new MatchNode(null, 0)\n\t\tconst finalRound = new Round(1, `Round ${numRounds}`, 0)\n\t\tfinalRound.matches = [rootMatch]\n\t\tconst rounds = [finalRound]\n\n\t\tfor (let i = 1; i < numRounds; i++) {\n\n\t\t\tlet ranges: WildcardRange[] = []\n\n\t\t\tif (i === numRounds - 1 && numWildcards > 0) {\n\t\t\t\tconst placement = wildcardPlacement\n\t\t\t\tconst maxNodes = 2 ** i\n\t\t\t\tconst range1 = this.getWildcardRange(0, maxNodes / 2, numWildcards / 2, placement)\n\t\t\t\tconst range2 = this.getWildcardRange(maxNodes / 2, maxNodes, numWildcards / 2, placement)\n\t\t\t\tranges = [...range1, ...range2]\n\t\t\t}\n\n\t\t\tconst round = new Round(i + 1, `Round ${numRounds - i}`, i);\n\t\t\tconst maxMatches = 2 ** i\n\t\t\tconst matches: (MatchNode | null)[] = []\n\t\t\tfor (let x = 0; x < maxMatches; x++) {\n\t\t\t\tif (ranges.length > 0) {\n\t\t\t\t\t// check to see if x is in the range of any of the wildcard ranges\n\t\t\t\t\tconst inRange = ranges.some(range => {\n\t\t\t\t\t\treturn x >= range.min && x < range.max\n\t\t\t\t\t})\n\t\t\t\t\tif (!inRange) {\n\t\t\t\t\t\tmatches[x] = null\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// const parentIndex = Math.floor(x / 2)\n\t\t\t\t// const parent = rounds[i - 1].matches[parentIndex]\n\t\t\t\tconst parent = this.getParent(x, i, rounds)\n\t\t\t\tconst match = new MatchNode(parent, i)\n\t\t\t\tthis.assignMatchToParent(x, match, parent)\n\t\t\t\tmatches[x] = match\n\t\t\t}\n\t\t\tround.matches = matches\n\t\t\trounds[i] = round\n\t\t};\n\t\treturn rounds\n\t}\n\n\n\tstatic getWildcardRange(start: number, end: number, count: number, placement: WildcardPlacement): WildcardRange[] {\n\t\tswitch (placement) {\n\t\t\tcase WildcardPlacement.Top:\n\t\t\t\treturn [new WildcardRange(start, start + count)]\n\t\t\tcase WildcardPlacement.Bottom:\n\t\t\t\treturn [new WildcardRange(end - count, end)]\n\t\t\tcase WildcardPlacement.Center:\n\t\t\t\tconst offset = (end - start - count) / 2;\n\t\t\t\treturn [new WildcardRange(start + offset, end - offset)];\n\t\t\tcase WildcardPlacement.Split:\n\t\t\t\treturn [new WildcardRange(start, start + count / 2), new WildcardRange(end - count / 2, end)]\n\t\t}\n\t}\n\n\tclone(): MatchTree {\n\t\tconst tree = this\n\t\tconst newTree = new MatchTree()\n\t\t// First, create the new rounds.\n\t\tnewTree.rounds = tree.rounds.map((round) => {\n\t\t\tconst newRound = new Round(round.id, round.name, round.depth);\n\t\t\treturn newRound;\n\t\t});\n\t\t// Then, iterate over the new rounds to create the matches and update their parent relationships.\n\t\tnewTree.rounds.forEach((round, roundIndex) => {\n\t\t\tround.matches = tree.rounds[roundIndex].matches.map((match, matchIndex) => {\n\t\t\t\tif (match === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst newMatch = match.clone();\n\t\t\t\tconst parent = MatchTree.getParent(matchIndex, roundIndex, newTree.rounds);\n\t\t\t\tnewMatch.parent = parent;\n\t\t\t\tMatchTree.assignMatchToParent(matchIndex, newMatch, parent);\n\t\t\t\treturn newMatch;\n\t\t\t});\n\t\t});\n\t\treturn newTree;\n\t}\n\n\tstatic fromBracketResponse(bracket: BracketResponse): MatchTree {\n\t\tconst tree = new MatchTree()\n\t\ttree.rounds = bracket.rounds.map((round) => {\n\t\t\tconst newRound = new Round(round.id, round.name, round.depth);\n\t\t\treturn newRound;\n\t\t});\n\t\t// Then, iterate over the new rounds to create the matches and update their parent relationships.\n\t\ttree.rounds.forEach((round, roundIndex) => {\n\t\t\tround.matches = bracket.rounds[roundIndex].matches.map((match, matchIndex) => {\n\t\t\t\tif (match === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst newMatch = new MatchNode(null, roundIndex);\n\t\t\t\tnewMatch.team1 = match.team1 ? new Team(match.team1.name) : null;\n\t\t\t\tnewMatch.team2 = match.team2 ? new Team(match.team2.name) : null;\n\t\t\t\tnewMatch.result = match.result ? new Team(match.result.name) : null;\n\t\t\t\tconst parent = this.getParent(matchIndex, roundIndex, tree.rounds);\n\t\t\t\tif (parent) {\n\t\t\t\t\tnewMatch.parent = parent;\n\t\t\t\t\tthis.assignMatchToParent(matchIndex, newMatch, parent);\n\t\t\t\t}\n\t\t\t\treturn newMatch;\n\t\t\t});\n\t\t});\n\t\treturn tree;\n\t}\n\n\n\t// \tnewTree.rounds = tree.rounds.map((round, i, rounds) => {\n\t// \t\tconst newRound = new Round(round.id, round.name, round.depth, round.roundNum)\n\t// \t\tconsole.log('i', i)\n\t// \t\tconsole.log('rounds', rounds)\n\t// \t\tnewRound.matches = round.matches.map((match, x, matches) => {\n\t// \t\t\tif (match === null) {\n\t// \t\t\t\treturn null\n\t// \t\t\t}\n\t// \t\t\tconst newMatch = match.clone()\n\t// \t\t\tconsole.log('x', x)\n\t// \t\t\tconsole.log('matches', matches)\n\t// \t\t\tconst parent = this.getParent(x, i, newTree.rounds)\n\t// \t\t\tnewMatch.parent = parent\n\t// \t\t\tthis.assignMatchToParent(x, newMatch, parent)\n\t// \t\t\treturn newMatch\n\t// \t\t})\n\t// \t\treturn newRound\n\t// \t})\n\t// \treturn newTree\n\t// }\n\n\tstatic getParent(matchIndex: number, roundIndex: number, rounds: Round[]): MatchNode | null {\n\t\tif (roundIndex === 0) {\n\t\t\treturn null\n\t\t}\n\t\tconst parentIndex = Math.floor(matchIndex / 2)\n\t\treturn rounds[roundIndex - 1].matches[parentIndex]\n\t}\n\n\tstatic assignMatchToParent(matchIndex: number, match: MatchNode, parent: MatchNode | null) {\n\t\tif (parent === null) {\n\t\t\treturn\n\t\t}\n\t\tif (matchIndex % 2 === 0) {\n\t\t\tparent.left = match\n\t\t} else {\n\t\t\tparent.right = match\n\t\t}\n\t}\n}\n\ninterface TeamSlotProps {\n\tclassName: string;\n\tteam: Team | null;\n\tupdateTeam?: (name: string) => void;\n}\n\nconst TeamSlot = (props: TeamSlotProps) => {\n\tconst [editing, setEditing] = useState(false)\n\tconst [textBuffer, setTextBuffer] = useState('')\n\n\tconst {\n\t\tteam,\n\t\tupdateTeam,\n\t} = props\n\n\n\tconst handleUpdateTeam = (e) => {\n\t\tif (!team && textBuffer !== '' || team && textBuffer !== team.name) {\n\t\t\tupdateTeam(textBuffer)\n\t\t}\n\t\tsetEditing(false)\n\t}\n\n\treturn (\n\t\t<div className={props.className} onClick={() => setEditing(true)}>\n\t\t\t{editing ?\n\t\t\t\t<input\n\t\t\t\t\tclassName='wpbb-team-name-input'\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonFocus={(e) => e.target.select()}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={textBuffer}\n\t\t\t\t\tonChange={(e) => setTextBuffer(e.target.value)}\n\t\t\t\t\tonBlur={handleUpdateTeam}\n\t\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\t\thandleUpdateTeam(e)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<span className='wpbb-team-name'>{team ? team.name : ''}</span>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nconst MatchBox = (props) => {\n\tconst match: MatchNode | null = props.match\n\tconst direction: Direction = props.direction\n\tconst height: number = props.height\n\tconst spacing: number = props.spacing\n\t// const updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\tconst updateTeam = props.updateTeam\n\n\t// const updateTeam = (name: string, left: boolean) => {\n\t// \tconsole.log('updateTeam', name)\n\t// \t// updateTeam(match.roundId, match.matchIndex, left, name)\n\t// }\n\n\tif (match === null) {\n\t\treturn (\n\t\t\t<div className='wpbb-match-box-empty' style={{ height: height + spacing }} />\n\t\t)\n\t}\n\n\n\tlet className: string;\n\n\tif (direction === Direction.TopLeft || direction === Direction.BottomLeft) {\n\t\t// Left side of the bracket\n\t\tclassName = 'wpbb-match-box-left'\n\t} else {\n\t\t// Right side of the bracket\n\t\tclassName = 'wpbb-match-box-right'\n\t}\n\n\tconst upperOuter = match.left === null\n\tconst lowerOuter = match.right === null\n\n\tif (upperOuter && lowerOuter) {\n\t\t// First round\n\t\tclassName += '-outer'\n\t} else if (upperOuter) {\n\t\t// Upper bracket\n\t\tclassName += '-outer-upper'\n\t} else if (lowerOuter) {\n\t\t// Lower bracket\n\t\tclassName += '-outer-lower'\n\t}\n\n\t// This component renders the lines connecting two nodes representing a \"game\"\n\t// These should be evenly spaced in the column and grow according to the number of other matches in the round\n\treturn (\n\t\t<div className={className} style={{ height: height, marginBottom: spacing }}>\n\t\t\t<TeamSlot className='wpbb-team1' team={match.team1} updateTeam={(name: string) => updateTeam(true, name)} />\n\t\t\t<TeamSlot className='wpbb-team2' team={match.team2} updateTeam={(name: string) => updateTeam(false, name)} />\n\t\t</div>\n\t)\n}\n\nconst Spacer = ({ grow = '1' }) => {\n\treturn (\n\t\t<div style={{ flexGrow: grow }} />\n\t)\n}\n\ninterface RoundHeaderProps {\n\tround: Round;\n\tupdateRoundName?: (roundId: number, name: string) => void;\n}\n\nconst RoundHeader = (props: RoundHeaderProps) => {\n\tconst [editRoundName, setEditRoundName] = useState(false);\n\tconst [nameBuffer, setNameBuffer] = useState('');\n\tconst {\n\t\tround,\n\t\tupdateRoundName,\n\t} = props\n\n\tconst canEdit = updateRoundName !== undefined\n\n\tuseEffect(() => {\n\t\tsetNameBuffer(props.round.name)\n\t}, [props.round.name])\n\n\tconst startEditing = () => {\n\t\tif (!canEdit) {\n\t\t\treturn\n\t\t}\n\t\tsetEditRoundName(true)\n\t\tsetNameBuffer(round.name)\n\t}\n\n\tconst doneEditing = () => {\n\t\tif (!canEdit) {\n\t\t\treturn\n\t\t}\n\t\tsetEditRoundName(false)\n\t\tupdateRoundName(props.round.id, nameBuffer)\n\t}\n\n\treturn (\n\t\t<div className='wpbb-round__header'>\n\t\t\t{editRoundName ? <Form.Control type='text'\n\t\t\t\tvalue={nameBuffer}\n\t\t\t\tautoFocus\n\t\t\t\tonFocus={(e) => e.target.select()}\n\t\t\t\tonBlur={() => doneEditing()}\n\t\t\t\tonChange={(e) => setNameBuffer(e.target.value)}\n\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\tdoneEditing()\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<span onClick={startEditing}>{round.name}</span>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nconst FinalRound = (props) => {\n\tconst round: Round = props.round;\n\tconst updateRoundName = props.updateRoundName;\n\treturn (\n\t\t<div className='wpbb-round'>\n\t\t\t<RoundHeader round={round} updateRoundName={updateRoundName} />\n\t\t\t<div className='wpbb-round__body'>\n\t\t\t\t<Spacer grow='2' />\n\t\t\t\t<div className='wpbb-final-match'>\n\t\t\t\t\t<TeamSlot className='wpbb-team1' />\n\t\t\t\t\t<TeamSlot className='wpbb-team2' />\n\t\t\t\t</div>\n\t\t\t\t<Spacer grow='2' />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\ninterface MatchColumnProps {\n\tround: Round;\n\tmatches: Nullable<MatchNode>[];\n\tdirection: Direction;\n\tnumDirections: number;\n\tmatchHeight: number;\n\tupdateRoundName?: (roundId: number, name: string) => void;\n\tupdateTeam?: (roundId: number, matchIndex: number, left: boolean, name: string) => void;\n}\n\nconst MatchColumn = (props: MatchColumnProps) => {\n\tconst {\n\t\tround,\n\t\tmatches,\n\t\tdirection,\n\t\tnumDirections,\n\t\tmatchHeight,\n\t\tupdateRoundName,\n\t\tupdateTeam,\n\t} = props\n\t// const updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\tconst canEdit = updateTeam !== undefined && updateRoundName !== undefined\n\n\n\n\tconst buildMatches = () => {\n\t\tconst matchBoxes = matches.map((match, i) => {\n\t\t\tconst matchIndex = direction === Direction.TopLeft || direction === Direction.BottomLeft ? i : i + matches.length\n\t\t\treturn (\n\t\t\t\t<MatchBox\n\t\t\t\t\tmatch={match}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\theight={matchHeight}\n\t\t\t\t\tspacing={i + 1 < matches.length ? matchHeight : 0} // Do not add spacing to the last match in the round column\n\t\t\t\t\tupdateTeam={canEdit ? (left: boolean, name: string) => updateTeam(round.id, matchIndex, left, name) : undefined}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t\treturn matchBoxes\n\n\t}\n\treturn (\n\t\t<div className='wpbb-round'>\n\t\t\t<RoundHeader round={round} updateRoundName={canEdit ? updateRoundName : undefined} />\n\t\t\t<div className='wpbb-round__body'>\n\t\t\t\t{buildMatches()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst NumRoundsSelector = (props) => {\n\tconst {\n\t\tnumRounds,\n\t\tsetNumRounds\n\t} = props\n\n\tconst minRounds = 1;\n\tconst maxRounds = 6;\n\n\tconst options = Array.from(Array(maxRounds - minRounds + 1).keys()).map((i) => {\n\t\treturn (\n\t\t\t<option value={i + minRounds}>{i + minRounds}</option>\n\t\t)\n\t})\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetNumRounds(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tNumber of Rounds:\n\t\t\t</label>\n\t\t\t<select value={numRounds} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nconst NumWildcardsSelector = (props) => {\n\tconst {\n\t\tnumWildcards,\n\t\tsetNumWildcards,\n\t\tmaxWildcards,\n\t} = props\n\n\tconst minWildcards = 0;\n\n\t// Number of wildcards must be an even number or 0\n\tlet options = [\n\t\t<option value={0}>0</option>\n\t]\n\toptions = [...options, ...Array.from(Array(maxWildcards / 2).keys()).reverse().map((i) => {\n\t\treturn (\n\t\t\t<option value={(i + 1) * 2}>{(i + 1) * 2}</option>\n\t\t)\n\t})]\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetNumWildcards(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tWildcard Games:\n\t\t\t</label>\n\t\t\t<select value={numWildcards} onChange={handleChange}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\ninterface WildcardPlacementSelectorProps {\n\twildcardPlacement: WildcardPlacement;\n\tsetWildcardPlacement: (wildcardPlacement: WildcardPlacement) => void;\n\tdisabled: boolean;\n}\n\nconst WildcardPlacementSelector = (props: WildcardPlacementSelectorProps) => {\n\tconst {\n\t\twildcardPlacement,\n\t\tsetWildcardPlacement,\n\t\tdisabled,\n\t} = props\n\n\tconst options = [\n\t\t<option value={WildcardPlacement.Bottom}>Bottom</option>,\n\t\t<option value={WildcardPlacement.Top}>Top</option>,\n\t\t<option value={WildcardPlacement.Split}>Split</option>,\n\t\t<option value={WildcardPlacement.Center}>Centered</option>,\n\t]\n\n\tconst handleChange = (event) => {\n\t\tconst num = event.target.value\n\t\tsetWildcardPlacement(parseInt(num))\n\t}\n\n\treturn (\n\t\t<div className='wpbb-option-group'>\n\t\t\t<label>\n\t\t\t\tWildcard Placement:\n\t\t\t</label>\n\t\t\t<select value={wildcardPlacement} onChange={handleChange} disabled={disabled}>\n\t\t\t\t{options}\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nconst BracketTitle = (props) => {\n\tconst {\n\t\ttitle,\n\t\tsetTitle,\n\t} = props\n\tconst [editing, setEditing] = useState(false)\n\tconst [textBuffer, setTextBuffer] = useState(title)\n\n\tconst handleUpdateTitle = (event) => {\n\t\tsetTitle(textBuffer)\n\t\tsetEditing(false)\n\t}\n\n\treturn (\n\t\t<div className='wpbb-bracket-title' onClick={() => setEditing(true)}>\n\t\t\t{editing ?\n\t\t\t\t<input\n\t\t\t\t\tclassName='wpbb-bracket-title-input'\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonFocus={(e) => e.target.select()}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={textBuffer}\n\t\t\t\t\tonChange={(e) => setTextBuffer(e.target.value)}\n\t\t\t\t\tonBlur={handleUpdateTitle}\n\t\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\t\thandleUpdateTitle(e)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t<span className='wpbb-bracket-title-name'>{title}</span>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\n\ninterface BracketProps {\n\tmatchTree: MatchTree;\n\tsetMatchTree?: (matchTree: MatchTree) => void;\n}\n\nconst Bracket = (props: BracketProps) => {\n\t// const { numRounds, numWildcards, wildcardPlacement } = props\n\t// const [matchTree, setMatchTree] = useState<MatchTree>(MatchTree.fromOptions(numRounds, numWildcards, wildcardPlacement))\n\tconst {\n\t\tmatchTree,\n\t\tsetMatchTree,\n\t} = props\n\n\tconst rounds = matchTree.rounds\n\tconst canEdit = setMatchTree !== undefined\n\n\n\tconst updateRoundName = (roundId: number, name: string) => {\n\t\tif (!canEdit) {\n\t\t\treturn\n\t\t}\n\t\tconst newMatchTree = matchTree.clone();\n\t\tconst roundToUpdate = newMatchTree.rounds.find((round) => round.id === roundId);\n\t\tif (roundToUpdate) {\n\t\t\troundToUpdate.name = name;\n\t\t\tsetMatchTree(newMatchTree);\n\t\t}\n\t};\n\n\tconst updateTeam = (roundId: number, matchIndex: number, left: boolean, name: string) => {\n\t\tif (!canEdit) {\n\t\t\treturn\n\t\t}\n\t\tconst newMatchTree = matchTree.clone();\n\t\tconst roundToUpdate = newMatchTree.rounds.find((round) => round.id === roundId);\n\t\tif (roundToUpdate) {\n\t\t\tconst matchToUpdate = roundToUpdate.matches[matchIndex];\n\t\t\tif (matchToUpdate) {\n\t\t\t\tif (left) {\n\t\t\t\t\tconst team = matchToUpdate.team1;\n\t\t\t\t\tif (team) {\n\t\t\t\t\t\tteam.name = name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatchToUpdate.team1 = new Team(name);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst team = matchToUpdate.team2;\n\t\t\t\t\tif (team) {\n\t\t\t\t\t\tteam.name = name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatchToUpdate.team2 = new Team(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetMatchTree(newMatchTree);\n\t\t}\n\t}\n\n\tconst targetHeight = 800;\n\n\t// The number of rounds sets the initial height of each match\n\t// const firstRoundMatchHeight = targetHeight / rounds.length / 2;\n\tconst firstRoundMatchHeight = targetHeight / 2 ** (rounds.length - 2) / 2;\n\n\t/**\n\t * Build rounds in two directions, left to right and right to left\n\t */\n\tconst buildRounds2 = (rounds: Round[]) => {\n\t\t// Assume rounds are sorted by depth\n\t\t// Rendering from left to right, sort by depth descending\n\t\tconst numDirections = 2\n\n\t\treturn [\n\t\t\t...rounds.slice(1).reverse().map((round, idx) => {\n\t\t\t\t// Get the first half of matches for this column\n\t\t\t\tconst colMatches = round.matches.slice(0, round.matches.length / 2)\n\n\t\t\t\treturn <MatchColumn\n\t\t\t\t\tmatches={colMatches}\n\t\t\t\t\tround={round} direction={Direction.TopLeft}\n\t\t\t\t\tnumDirections={numDirections}\n\t\t\t\t\tmatchHeight={2 ** idx * firstRoundMatchHeight}\n\t\t\t\t\tupdateRoundName={canEdit ? updateRoundName : undefined}\n\t\t\t\t\tupdateTeam={canEdit ? updateTeam : undefined}\n\t\t\t\t/>\n\t\t\t}),\n\t\t\t// handle final round differently\n\t\t\t<FinalRound round={rounds[0]} updateRoundName={updateRoundName} />,\n\t\t\t...rounds.slice(1).map((round, idx, arr) => {\n\t\t\t\t// Get the second half of matches for this column\n\t\t\t\tconst colMatches = round.matches.slice(round.matches.length / 2)\n\n\t\t\t\treturn <MatchColumn round={round}\n\t\t\t\t\tmatches={colMatches}\n\t\t\t\t\tdirection={Direction.TopRight}\n\t\t\t\t\tnumDirections={numDirections}\n\t\t\t\t\tmatchHeight={2 ** (arr.length - 1 - idx) * firstRoundMatchHeight}\n\t\t\t\t\tupdateRoundName={canEdit ? updateRoundName : undefined}\n\t\t\t\t\tupdateTeam={canEdit ? updateTeam : undefined}\n\t\t\t\t/>\n\t\t\t})\n\t\t]\n\t}\n\n\treturn (\n\t\t<div className='wpbb-bracket'>\n\t\t\t{rounds.length > 0 && buildRounds2(rounds)}\n\t\t</div>\n\t)\n}\n\nexport enum BracketModalMode {\n\tNew = 0,\n\tView = 1,\n\tScore = 2,\n}\n\nconst ViewBracketModal = (props) => {\n\tconst {\n\t\tshow,\n\t\thandleClose,\n\t\tbracketId\n\t} = props;\n\tconst [matchTree, setMatchTree] = useState<MatchTree | null>(null)\n\n\tuseEffect(() => {\n\t\tbracketApi.getBracket(bracketId)\n\t\t\t.then((bracket) => {\n\t\t\t\tsetMatchTree(MatchTree.fromBracketResponse(bracket))\n\t\t\t})\n\t}, [bracketId])\n\n\treturn (\n\t\t<Modal className='wpbb-bracket-modal' show={show} onHide={handleClose} size='xl' centered={true}>\n\t\t\t<Modal.Header className='wpbb-bracket-modal__header' closeButton>\n\t\t\t\t<Modal.Title>View Bracket {bracketId}</Modal.Title>\n\t\t\t</Modal.Header >\n\t\t\t<Modal.Body className='pt-0'>\n\t\t\t\t{matchTree ? <Bracket matchTree={matchTree} /> : 'Loading...'}\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer className='wpbb-bracket-modal__footer'>\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n\ninterface NewBracketModalProps {\n\tshow: boolean;\n\thandleClose: () => void;\n\thandleSave: () => void;\n\tbracketId: Nullable<number>;\n}\n\nconst NewBracketModal = (props: NewBracketModalProps) => {\n\tconst defaultNumRounds = 4;\n\tconst defaultNumWildcards = 0;\n\tconst defaultWildcardPlacement = WildcardPlacement.Bottom;\n\tconst defaultBracketName = 'New Bracket';\n\tconst {\n\t\tshow,\n\t\thandleClose,\n\t\thandleSave,\n\t\tbracketId\n\t} = props;\n\tconst [numRounds, setNumRounds] = useState(defaultNumRounds);\n\tconst [numWildcards, setNumWildcards] = useState(defaultNumWildcards);\n\tconst [wildcardPlacement, setWildcardPlacement] = useState(defaultWildcardPlacement);\n\tconst [bracketName, setBracketName] = useState(defaultBracketName);\n\tconst [matchTree, setMatchTree] = useState<MatchTree>(MatchTree.fromOptions(defaultNumRounds, defaultNumWildcards, defaultWildcardPlacement));\n\t// The max number of wildcards is 2 less than the possible number of matches in the first round\n\tconst maxWildcards = 2 ** (numRounds - 1) - 2;\n\n\tuseEffect(() => {\n\t\tconsole.log('bracketId', bracketId)\n\t\tif (bracketId) {\n\t\t\tbracketApi.getBracket(bracketId)\n\t\t\t\t.then((bracket) => {\n\t\t\t\t\tsetNumRounds(bracket.numRounds)\n\t\t\t\t\tsetNumWildcards(bracket.numWildcards)\n\t\t\t\t\tif (bracket.wildcardPlacement) {\n\t\t\t\t\t\tsetWildcardPlacement(bracket.wildcardPlacement)\n\t\t\t\t\t}\n\t\t\t\t\tsetBracketName(`${bracket.name} (Copy)`)\n\t\t\t\t\tsetMatchTree(MatchTree.fromBracketResponse(bracket))\n\t\t\t\t})\n\t\t}\n\t\telse {\n\t\t\trebuildMatchTree(defaultNumRounds, defaultNumWildcards, defaultWildcardPlacement);\n\t\t}\n\t}, [bracketId])\n\n\tconst updateNumRounds = (num: number) => {\n\t\tsetNumRounds(num);\n\t\trebuildMatchTree(num, numWildcards, wildcardPlacement);\n\t};\n\n\tconst updateNumWildcards = (num: number) => {\n\t\tsetNumWildcards(num);\n\t\trebuildMatchTree(numRounds, num, wildcardPlacement);\n\t};\n\n\tconst updateWildcardPlacement = (placement: WildcardPlacement) => {\n\t\tsetWildcardPlacement(placement);\n\t\trebuildMatchTree(numRounds, numWildcards, placement);\n\t};\n\n\tconst rebuildMatchTree = (\n\t\tupdatedNumRounds: number,\n\t\tupdatedNumWildcards: number,\n\t\tupdatedWildcardPlacement: WildcardPlacement\n\t) => {\n\t\tsetMatchTree(MatchTree.fromOptions(updatedNumRounds, updatedNumWildcards, updatedWildcardPlacement));\n\t};\n\n\n\treturn (\n\t\t<Modal className='wpbb-bracket-modal' show={show} onHide={handleClose} size='xl' centered={true}>\n\t\t\t<Modal.Header className='wpbb-bracket-modal__header' closeButton>\n\t\t\t\t<Modal.Title><BracketTitle title={bracketName} setTitle={setBracketName} /></Modal.Title>\n\t\t\t\t<form className='wpbb-options-form'>\n\t\t\t\t\t<NumRoundsSelector\n\t\t\t\t\t\tnumRounds={numRounds}\n\t\t\t\t\t\tsetNumRounds={updateNumRounds}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumWildcardsSelector\n\t\t\t\t\t\tnumWildcards={numWildcards}\n\t\t\t\t\t\tsetNumWildcards={updateNumWildcards}\n\t\t\t\t\t\tmaxWildcards={maxWildcards}\n\t\t\t\t\t/>\n\t\t\t\t\t<WildcardPlacementSelector\n\t\t\t\t\t\twildcardPlacement={wildcardPlacement}\n\t\t\t\t\t\tsetWildcardPlacement={updateWildcardPlacement}\n\t\t\t\t\t\tdisabled={numWildcards > 0 ? false : true}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t</Modal.Header >\n\t\t\t<Modal.Body className='pt-0'><Bracket matchTree={matchTree} setMatchTree={setMatchTree} /></Modal.Body>\n\t\t\t<Modal.Footer className='wpbb-bracket-modal__footer'>\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"primary\" onClick={handleSave}>\n\t\t\t\t\tSave Changes\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n\ninterface BracketModalProps {\n\tshow: boolean;\n\thandleClose: () => void;\n\thandleSave: () => void;\n\tmode: BracketModalMode;\n\tbracketId: Nullable<number>;\n}\n\n\nexport const BracketModal = (props: BracketModalProps) => {\n\tconst bracketId = props.bracketId;\n\n\tif (bracketId) {\n\t\tif (props.mode === BracketModalMode.New) {\n\t\t\treturn <NewBracketModal {...props} />\n\t\t} else if (props.mode === BracketModalMode.Score) {\n\t\t\treturn <ViewBracketModal {...props} />\n\t\t} else {\n\t\t\treturn <ViewBracketModal {...props} />\n\t\t}\n\t} else {\n\t\treturn <NewBracketModal {...props} />\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Button, Table, Modal } from 'react-bootstrap';\nimport { BracketModal, BracketModalMode } from '../bracket_builder/Bracket';\nimport { BracketResponse, bracketApi } from '../../api/bracketApi';\n\n// class BracketResponse {\n// \tid: number;\n// \tname: string;\n// \tactive: boolean;\n\n// \tconstructor(id: number, name: string, active: boolean) {\n// \t\tthis.id = id;\n// \t\tthis.name = name;\n// \t\tthis.active = active;\n// \t}\n// }\n\ninterface DeleteModalProps {\n\tshow: boolean;\n\tonHide: () => void;\n\tonDelete: () => void;\n}\n\nconst DeleteModal: React.FC<DeleteModalProps> = ({ show, onHide, onDelete }) => {\n\treturn (\n\t\t<Modal show={show} onHide={onHide} centered={true}>\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>Delete Bracket</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<p>\n\t\t\t\t\tAre you sure you want to delete this bracket? This will delete all associated user brackets and cannot be undone.\n\t\t\t\t</p>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button variant=\"secondary\" onClick={onHide}>\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"danger\" onClick={onDelete}>\n\t\t\t\t\tDelete\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\n\ninterface BracketRowProps {\n\tbracket: BracketResponse;\n\t// handleViewBracket: (bracketId: number) => void;\n\thandleShowBracketModal: (mode: BracketModalMode, bracketId: number | null) => void;\n\thandleDeleteBracket: (bracketId: number) => void;\n}\n\nconst BracketRow: React.FC<BracketRowProps> = (props) => {\n\tconst [showDeleteModal, setShowDeleteModal] = useState(false);\n\tconst [active, setActive] = useState<boolean>(props.bracket.active);\n\tconst bracket: BracketResponse = props.bracket;\n\n\tconst handleViewBracket = () => {\n\t\tprops.handleShowBracketModal(BracketModalMode.View, bracket.id);\n\t}\n\n\tconst handleCopyBracket = (e) => {\n\t\te.stopPropagation();\n\t\tprops.handleShowBracketModal(BracketModalMode.New, bracket.id)\n\t}\n\n\tconst handleShowDeleteDialog = (e) => {\n\t\te.stopPropagation();\n\t\tsetShowDeleteModal(true);\n\t}\n\n\tconst handleActiveToggle = (e) => {\n\t\te.stopPropagation();\n\t\tconsole.log('toggle')\n\t\tbracketApi.setActive(bracket.id, e.target.checked).then((isActive) => {\n\t\t\tsetActive(isActive);\n\t\t})\n\t\tconsole.log(e.target.checked)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<tr onClick={handleViewBracket}>\n\t\t\t\t<td>{bracket.name}</td>\n\t\t\t\t<td className='text-center'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={active}\n\t\t\t\t\t\tonClick={handleActiveToggle}\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t<td className='wpbb-bracket-table-action-col'>\n\t\t\t\t\t<Button variant=\"primary\" >Score</Button>\n\t\t\t\t\t<Button variant=\"success\" className='mx-2' onClick={handleCopyBracket}>Copy</Button>\n\t\t\t\t\t<Button variant=\"danger\" onClick={handleShowDeleteDialog}>Delete</Button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<DeleteModal\n\t\t\t\tshow={showDeleteModal}\n\t\t\t\tonHide={() => setShowDeleteModal(false)}\n\t\t\t\tonDelete={() => props.handleDeleteBracket(bracket.id)}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\n\ninterface BracketTableProps {\n\tbrackets: BracketResponse[];\n\thandleShowBracketModal: (mode: BracketModalMode, bracketId: number | null) => void;\n\thandleDeleteBracket: (bracketId: number) => void;\n}\n\nconst BracketTable: React.FC<BracketTableProps> = (props) => {\n\tconst brackets: BracketResponse[] = props.brackets;\n\n\treturn (\n\t\t<Table hover className='table-dark wpbb-bracket-table'>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t\t<th scope=\"col\" className='text-center'>Published</th>\n\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{brackets.map((bracket) => (\n\t\t\t\t\t<BracketRow\n\t\t\t\t\t\tkey={bracket.id}\n\t\t\t\t\t\tbracket={bracket}\n\t\t\t\t\t\t// handleViewBracket={handleViewBracket}\n\t\t\t\t\t\t// handleDeleteBracket={props.handleDeleteBracket}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</Table>\n\t);\n};\n\n\n\nconst Settings = () => {\n\tconst [showBracketModal, setShowBracketModal] = useState(false)\n\tconst [brackets, setBrackets] = useState<BracketResponse[]>([]);\n\tconst [bracketModalMode, setBracketModalMode] = useState<BracketModalMode>(BracketModalMode.View);\n\tconst [activeBracketId, setActiveBracketId] = useState<number | null>(null);\n\n\tconst handleCloseBracketModal = () => {\n\t\tsetActiveBracketId(null);\n\t\tsetShowBracketModal(false);\n\t}\n\tconst handleSaveBracketModal = () => setShowBracketModal(false);\n\tconst handleShowBracketModal = (mode: BracketModalMode, bracketId: number | null = null) => {\n\t\tsetActiveBracketId(bracketId);\n\t\tsetBracketModalMode(mode);\n\t\tsetShowBracketModal(true);\n\t};\n\tconst handleDeleteBracket = (bracketId: number) => {\n\t\tbracketApi.deleteBracket(bracketId).then(() => {\n\t\t\tsetBrackets(brackets.filter((bracket) => bracket.id !== bracketId));\n\t\t})\n\t}\n\t// const handleCopyBracket = (bracketId: number) => {\n\t// \tbracketApi.(bracketId).then((bracket) => {\n\n\tuseEffect(() => {\n\t\tbracketApi.getBrackets().then((brackets) => {\n\t\t\tconsole.log(brackets);\n\t\t\tsetBrackets(brackets);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Container >\n\t\t\t<h2 className='mt-4 mb-4'>Bracket Builder Settings</h2>\n\t\t\t{/* <BracketList brackets={brackets} /> */}\n\t\t\t<BracketTable\n\t\t\t\tbrackets={brackets}\n\t\t\t\thandleShowBracketModal={handleShowBracketModal}\n\t\t\t\thandleDeleteBracket={handleDeleteBracket}\n\t\t\t/>\n\t\t\t<Button variant='dark' className='mt-6' onClick={() => handleShowBracketModal(BracketModalMode.New)}>New Bracket</Button>\n\t\t\t<BracketModal\n\t\t\t\tshow={showBracketModal}\n\t\t\t\tmode={bracketModalMode}\n\t\t\t\tbracketId={activeBracketId}\n\t\t\t\thandleClose={handleCloseBracketModal}\n\t\t\t\thandleSave={handleSaveBracketModal}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default Settings; ","export enum WildcardPlacement {\n\tTop = 0,\n\tBottom = 1,\n\tCenter = 2,\n\tSplit = 3,\n}"],"names":["BracketApi","bracketPath","constructor","baseUrl","wpbb_ajax_obj","rest_url","getBrackets","res","performRequest","status","Error","camelCaseKeys","json","getBracket","id","deleteBracket","setActive","active","path","activated","method","body","arguments","length","undefined","request","headers","JSON","stringify","snakeCaseKeys","fetch","toCamelCase","str","replace","group","toUpperCase","obj","Array","isArray","map","value","Object","entries","reduce","accumulator","_ref","key","camelCaseToSnakeCase","match","toLowerCase","_ref2","bracketApi","React","useState","useEffect","Button","Modal","Form","WildcardPlacement","Direction","Team","name","clone","MatchNode","team1","team2","result","left","right","parent","depth","Round","WildcardRange","min","max","toString","MatchTree","fromOptions","numRounds","numWildcards","wildcardPlacement","tree","rounds","buildRounds","rootMatch","finalRound","matches","i","ranges","placement","maxNodes","range1","getWildcardRange","range2","round","maxMatches","x","inRange","some","range","getParent","assignMatchToParent","start","end","count","Top","Bottom","Center","offset","Split","newTree","newRound","forEach","roundIndex","matchIndex","newMatch","fromBracketResponse","bracket","parentIndex","Math","floor","TeamSlot","props","editing","setEditing","textBuffer","setTextBuffer","team","updateTeam","handleUpdateTeam","e","createElement","className","onClick","autoFocus","onFocus","target","select","type","onChange","onBlur","onKeyUp","MatchBox","direction","height","spacing","style","TopLeft","BottomLeft","upperOuter","lowerOuter","marginBottom","Spacer","grow","flexGrow","RoundHeader","editRoundName","setEditRoundName","nameBuffer","setNameBuffer","updateRoundName","canEdit","startEditing","doneEditing","Control","FinalRound","MatchColumn","numDirections","matchHeight","buildMatches","matchBoxes","NumRoundsSelector","setNumRounds","minRounds","maxRounds","options","from","keys","handleChange","event","num","parseInt","NumWildcardsSelector","setNumWildcards","maxWildcards","minWildcards","reverse","WildcardPlacementSelector","setWildcardPlacement","disabled","BracketTitle","title","setTitle","handleUpdateTitle","Bracket","matchTree","setMatchTree","roundId","newMatchTree","roundToUpdate","find","matchToUpdate","targetHeight","firstRoundMatchHeight","buildRounds2","slice","idx","colMatches","arr","TopRight","BracketModalMode","ViewBracketModal","show","handleClose","bracketId","then","onHide","size","centered","Header","closeButton","Title","Body","Footer","variant","NewBracketModal","defaultNumRounds","defaultNumWildcards","defaultWildcardPlacement","defaultBracketName","handleSave","bracketName","setBracketName","console","log","rebuildMatchTree","updateNumRounds","updateNumWildcards","updateWildcardPlacement","updatedNumRounds","updatedNumWildcards","updatedWildcardPlacement","BracketModal","mode","New","Score","Container","Table","DeleteModal","onDelete","BracketRow","showDeleteModal","setShowDeleteModal","handleViewBracket","handleShowBracketModal","View","handleCopyBracket","stopPropagation","handleShowDeleteDialog","handleActiveToggle","checked","isActive","Fragment","handleDeleteBracket","BracketTable","brackets","hover","scope","_extends","Settings","showBracketModal","setShowBracketModal","setBrackets","bracketModalMode","setBracketModalMode","activeBracketId","setActiveBracketId","handleCloseBracketModal","handleSaveBracketModal","filter"],"sourceRoot":""}