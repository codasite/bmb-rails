# Placeholder `deploy_build_before` hook for building theme assets on the
# host machine and then copying the files to the remote server
#
# ⚠️ This example assumes your theme is using Sage 10
#
# Uncomment the lines below if you are using Sage 10
# and replace `sage` with your theme folder
#
---
# - name: Install npm dependencies
#   command: yarn
#   delegate_to: localhost
#   args:
#     chdir: "{{ project_local_path }}/web/app/themes/sage"
#
# - name: Install Composer dependencies
#   command: composer install --no-ansi --no-dev --no-interaction --no-progress --optimize-autoloader --no-scripts --classmap-authoritative
#   args:
#     chdir: "{{ deploy_helper.new_release_path }}/web/app/themes/sage"
#
# - name: Compile assets for production
#   command: yarn build
#   delegate_to: localhost
#   args:
#     chdir: "{{ project_local_path }}/web/app/themes/sage"
#
# - name: Check for entrypoints
#   stat:
#     path: "{{ project_local_path }}/web/app/themes/sage/public/entrypoints.json"
#   delegate_to: localhost
#   register: entrypoints_data

# - name: Entrypoints missing
#   ansible.builtin.fail:
#     msg: "The theme is missing the public/entrypoints.json file"
#   when: not entrypoints_data.stat.exists
#
# - name: Copy production assets
#   synchronize:
#     src: "{{ project_local_path }}/web/app/themes/sage/public"
#     dest: "{{ deploy_helper.new_release_path }}/web/app/themes/sage"
#     group: no
#     owner: no
#     rsync_opts: --chmod=Du=rwx,--chmod=Dg=rx,--chmod=Do=rx,--chmod=Fu=rw,--chmod=Fg=r,--chmod=Fo=r

# SETUP FOR WP-BRACKET-BUILDER
- name: Create .env file for docker compose
  template:
    src: roles/deploy/templates/docker-compose.env.j2
    dest: '{{ project_source_path }}/.env'
- name: Login to private docker registry
  docker_login:
    registry: '{{ docker_registry }}'
    username: '{{ docker_registry_username }}' # Define this variable in group_vars/all/vault.yml
    password: '{{ docker_registry_password }}' # Define this variable in group_vars/all/vault.yml
- name: Pull and run wp-bracket-builder containers
  command: make prod-up
  args:
    chdir: '{{ project_source_path }}'
- name: Copy wp-bracket-builder plugin files to new release
  command: 'docker cp wpbb-plugin:/usr/src/app {{ deploy_helper.new_release_path }}/web/app/plugins/wp-bracket-builder'
